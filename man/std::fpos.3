.TH std::fpos 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <ios>
   template< class State >
   class fpos;

   Specializations of the class template std::fpos identify absolute positions in a
   stream or in a file. Each object of type fpos holds the byte position in the stream
   (typically as a private member of type std::streamoff) and the current shift state,
   a value of type State (typically std::mbstate_t).

   Four specializations of std::fpos are provided:

   Defined in header <ios>
   Type         Definition
   streampos    std::fpos<std::char_traits<char>::state_type>
   u16streampos std::fpos<std::char_traits<char16_t>::state_type>
   u32streampos std::fpos<std::char_traits<char32_t>::state_type>
   wstreampos   std::fpos<std::char_traits<wchar_t>::state_type>

.SH Member functions

   state gets/sets the value of the shift state
         \fI(public member function)\fP

   In addition, the following member functions and operators must be provided, although
   it's unspecified if they are members or non-member.

     * A constructor that accepts an argument of type int.

     * A constructor that accepts an argument of type std::streamoff. This constructor
       must also accept the special value std::streamoff(-1): the std::fpos constructed
       in this manner is returned by some stream operations to indicate errors.

     * A conversion operator that converts fpos to std::streamoff with the value equal
       to the offset from std::fpos\fB(0)\fP.

     * operator== that compares two objects of type std::fpos and returns a value of
       type convertible to bool

     * operator!= that compares two objects of type std::fpos and returns a value of
       type convertible to bool

     * operator+ and operator+= which can add std::streamoff to std::fpos

     * operator- and operator-= which can subtract std::streamoff from an std::fpos

     * operator- which can subtract two objects of type std::fpos producing an
       std::streamoff

.SH See also

             represents relative file/stream position (offset from fpos), sufficient to
   streamoff represent any file size
             \fI(typedef)\fP
   tellp     returns the output position indicator
             \fI(public member function of std::basic_ostream)\fP
   seekp     sets the output position indicator
             \fI(public member function of std::basic_ostream)\fP
   fgetpos   gets the file position indicator
             \fI(function)\fP
