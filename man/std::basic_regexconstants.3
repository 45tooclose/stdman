.TH std::basic_regexconstants 3 "Nov 25 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_regexconstants \- std::basic_regexconstants

.SH Synopsis
   Defined in header <regex>
   static constexpr std::regex_constants::syntax_option_type icase =

       std::regex_constants::icase;
   static constexpr std::regex_constants::syntax_option_type nosubs =
       std::regex_constants::nosubs;
   static constexpr std::regex_constants::syntax_option_type optimize =
       std::regex_constants::optimize;
   static constexpr std::regex_constants::syntax_option_type collate =
       std::regex_constants::collate;
   static constexpr std::regex_constants::syntax_option_type ECMAScript =
       std::regex_constants::ECMAScript;
   static constexpr std::regex_constants::syntax_option_type basic =
       std::regex_constants::basic;
   static constexpr std::regex_constants::syntax_option_type extended =
       std::regex_constants::extended;
   static constexpr std::regex_constants::syntax_option_type awk =
       std::regex_constants::awk;
   static constexpr std::regex_constants::syntax_option_type grep =
       std::regex_constants::grep;
   static constexpr std::regex_constants::syntax_option_type egrep =

       std::regex_constants::egrep;

   std::basic_regex defines several constants that govern general regex matching
   syntax.

   These constants are duplicated from std::regex_constants:

   Value      Effect(s)
   icase      Character matching should be performed without regard to case.
   nosubs     When performing matches, no sub-expression matches should be stored in
              the supplied std::regex_match structure.
              Instructs the regular expression engine to make matching faster, with the
   optimize   potential cost of making construction slower. For example, this might
              mean converting a non-deterministic FSA to a deterministic FSA.
   collate    Character ranges of the form "[a-b]" will be locale sensitive.
   ECMAScript Use the Modified ECMAScript regular expression grammar
   basic      Use the basic POSIX regular expression grammar (grammar documentation).
   extended   Use the extended POSIX regular expression grammar (grammar
              documentation).
   awk        Use the regular expression grammar used by the awk utility in POSIX
              (grammar documentation)
              Use the regular expression grammar used by the grep utility in POSIX.
   grep       This is effectively the same as the basic option with the addition of
              newline '\\n' as an alternation separator.
              Use the regular expression grammar used by the grep utility, with the -E
   egrep      option, in POSIX. This is effectively the same as the extended option
              with the addition of newline '\\n' as an alternation separator in addtion
              to '|'.

.SH See also

   syntax_option_type general options controlling regex behavior
   \fI(C++11)\fP            \fI(typedef)\fP 
