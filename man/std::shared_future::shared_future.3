.TH std::shared_future::shared_future 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   shared_future();                             \fB(1)\fP \fI(since C++11)\fP
   shared_future( const shared_future& other ); \fB(2)\fP \fI(since C++11)\fP
   shared_future( future<R>&& other );          \fB(3)\fP \fI(since C++11)\fP
   shared_future( shared_future&& other );      \fB(4)\fP \fI(since C++11)\fP

   Constructs a new shared_future.

   begin)
   1) Default constructor. Constructs an empty shared future, that doesn't refer to a
   shared state, that is valid() == false.
   2) Constructs a shared future that refers to the same shared state, as other, if
   there's any.
   3-4) Move constructor. Transfers the shared state held by other to *this. After the
   construction, other->valid() == false, also valid() returns the same value as
   other.valid() would have returned before the construction.

.SH Parameters

   other - another future object to initialize with

.SH Exceptions

   1)
   noexcept specification:  
   noexcept
     
   2) \fI(none)\fP
   3-4)
   noexcept specification:  
   noexcept
     
