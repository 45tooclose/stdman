.TH std::fill 3 "Sep  4 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   Defined in header <algorithm>
   template< class ForwardIt, class T >
   void fill( ForwardIt first, ForwardIt last, const T& value );

   Assigns the given value to the elements in the range [first, last).

.SH Parameters

   first, last     -     the range of elements to modify
   value           -     the value to be assigned
.SH Type requirements
   -
   ForwardIt must meet the requirements of ForwardIterator.

.SH Return value

   \fI(none)\fP

.SH Complexity

   Exactly last - first assignments.

.SH Possible implementation

   template< class ForwardIt, class T >
   void fill(ForwardIt first, ForwardIt last, const T& value)
   {
       for (; first != last; ++first) {
           *first = value;
       }
   }

.SH Example

   The following code uses fill() to set all of the elements of a vector of integers to
   -1:

   
// Run this code

 #include <algorithm>
 #include <vector>
 #include <iostream>

 int main()
 {
     std::vector<int> v{0, 1, 2, 3, 4, 5, 6, 7, 8, 9};

     std::fill(v.begin(), v.end(), -1);

     for (auto elem : v) {
         std::cout << elem << " ";
     }
     std::cout << "\\n";
 }

.SH Output:

 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1

.SH See also

   fill_n                            assigns a value to a number of elements
                                     \fI(function template)\fP
   copy                              copies a range of elements to a new location
   copy_if                           \fI(function template)\fP
   \fI(C++11)\fP
   generate                          saves the result of a function in a range
                                     \fI(function template)\fP
   transform                         applies a function to a range of elements
                                     \fI(function template)\fP
   std::experimental::parallel::fill parallelized version of std::fill
   (parallelism TS)                  \fI(function template)\fP
