.TH std::is_reference 3 "Jun 28 2014" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   Defined in header <type_traits>
   template< class T >              \fI(since C++11)\fP
   struct is_reference;

   If T is a reference type (lvalue reference or rvalue reference), provides the member
   constant value equal true. For any other type, value is false.

.SH Member constants

   value    true if T is a reference type , false otherwise
   \fB[static]\fP \fI(public static member constant)\fP

.SH Member functions

   operator bool converts the object to bool, returns value
                 \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type bool
   type       std::integral_constant<bool, value>

.SH Possible implementation

   template <class T> struct is_reference      : std::false_type {};
   template <class T> struct is_reference<T&>  : std::true_type {};
   template <class T> struct is_reference<T&&> : std::true_type {};

.SH Example

   
// Run this code

 #include <iostream>
 #include <type_traits>
  
 class A {};
  
 int main()
 {
     std::cout << std::boolalpha;
     std::cout << std::is_reference<A>::value << '\\n';
     std::cout << std::is_reference<A&>::value << '\\n';
     std::cout << std::is_reference<A&&>::value << '\\n';
     std::cout << std::is_reference<int>::value << '\\n';
     std::cout << std::is_reference<int&>::value << '\\n';
     std::cout << std::is_reference<int&&>::value << '\\n';
 }

.SH Output:

 false
 true
 true
 false
 true
 true

.SH See also

   is_lvalue_reference checks if a type is lvalue reference
   \fI(C++11)\fP             \fI(class template)\fP 
   is_rvalue_reference checks if a type is rvalue reference
   \fI(C++11)\fP             \fI(class template)\fP 
