.TH std::unique_ptr::release 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   pointer release();  \fI(since C++11)\fP

   Releases the ownership of the managed object if any. get() returns nullptr after the
   call.

.SH Contents

     • 1 Parameters
     • 2 Return value
     • 3 Exceptions
     • 4 Example
     • 5 See also

.SH Parameters

   \fI(none)\fP

.SH Return value

   Pointer to the managed object or nullptr if there was no managed object, i.e. the
   value which would be returned by get() before the call.

.SH Exceptions

   noexcept specification:
   noexcept

.SH Example

   
// Run this code

 #include <memory>
 #include <iostream>

 struct Foo {
     Foo() { std::cout << "Foo\\n"; }
     ~Foo() { std::cout << "~Foo\\n"; }
 };

 int main()
 {
     std::cout << "Creating new Foo...\\n";
     std::unique_ptr<Foo> up(new Foo());

     std::cout << "About to release Foo...\\n";
     Foo* fp = up.release();

     if (up.get() == nullptr)
         std::cout << "Foo is no longer owned by unique_ptr...\\n";

     delete fp;
 }

.SH Output:

 Creating new Foo...
 Foo
 About to release Foo...
 Foo is no longer owned by unique_ptr...
 ~Foo

.SH See also

   get   returns a pointer to the managed object
         \fI(public member function)\fP
   reset replaces the managed object
         \fI(public member function)\fP
