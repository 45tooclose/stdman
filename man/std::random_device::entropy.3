.TH std::random_device::entropy 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   double entropy() const;  \fI(since C++11)\fP

   Obtains an estimate of the random number device entropy, which is a floating-point
   value between min() and log
   2(max()+1). If the device has n states whose individual probabilities are P
   0,...,P
   n-1, the device probability S is defined as

   S = -Î£n-1
   i=0P
   ilog(P
   i)

   A deterministic random number generator (e.g. a pseudo-random engine) has entropy
   zero.

.SH Contents

     * 1 Exceptions
     * 2 Return value
     * 3 Notes
     * 4 Example

.SH Exceptions

   noexcept specification:
   noexcept

.SH Return value

   The value of the device entropy, or zero if not applicable.

.SH Notes

   This function is not fully implemented in some standard libraries. For example, gcc
   and clang always return zero even though the device is non-deterministic. In
   comparison, Visual Studio always returns 32, and boost.random returns 10.

.SH Example

   Example output on one of the implementations

   
// Run this code

 #include <iostream>
 #include <random>

 int main()
 {
     std::random_device rd;
     std::cout << rd.entropy() << '\\n';
 }

.SH Possible output:

 32
