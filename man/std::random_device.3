.TH std::random_device 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <random>
   class random_device;        \fI(since C++11)\fP

   std::random_device is a uniformly-distributed integer random number generator that
   produces non-deterministic random numbers.

   Note that std::random_device may be implemented in terms of a pseudo-random number
   engine if a non-deterministic source (e.g. a hardware device) is not available to
   the implementation.

.SH Contents

     • 1 Member types
     • 2 Member functions

          • 2.1 Construction
          • 2.2 Generation
          • 2.3 Characteristics

     • 3 Example

.SH Member types

   Member type Definition
   result_type unsigned int

.SH Member functions

.SH Construction
   constructor   constructs the engine
                 \fI(public member function)\fP
   operator=     the assignment operator is deleted
   (deleted)     \fI(public member function)\fP
.SH Generation
   operator()    advances the engine's state and returns the generated value
                 \fI(public member function)\fP
.SH Characteristics
                 obtains the entropy estimate for the non-deterministic random number
   entropy       generator
                 \fI(public member function)\fP
   min           gets the smallest possible value in the output range
   \fB[static]\fP      \fI(public static member function)\fP
   max           gets the largest possible value in the output range
   \fB[static]\fP      \fI(public static member function)\fP

.SH Example

   
// Run this code

 #include <iostream>
 #include <string>
 #include <map>
 #include <random>
  
 int main()
 {
     std::random_device rd;
     std::map<int, int> hist;
     std::uniform_int_distribution<int> dist(0, 9);
     for (int n = 0; n < 20000; ++n) {
         ++hist[dist(rd)];
     }
     for (auto p : hist) {
         std::cout << p.first << " : " << std::string(p.second/100, '*') << '\\n';
     }
 }

.SH Possible output:

 0 : ********************
 1 : *******************
 2 : ********************
 3 : ********************
 4 : ********************
 5 : *******************
 6 : ********************
 7 : ********************
 8 : *******************
 9 : ********************
