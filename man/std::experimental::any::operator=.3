.TH std::experimental::any::operator= 3 "Nov 25 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::any::operator= \- std::experimental::any::operator=

.SH Synopsis
   any& operator=( const any& rhs );      \fB(1)\fP (library fundamentals TS)
   any& operator=( any&& rhs );           \fB(2)\fP (library fundamentals TS)
   template<typename ValueType>           \fB(3)\fP (library fundamentals TS)
       any& operator=( ValueType&& rhs );

   Assigns contents to the contained value.

   1-2) Assigns by copying \fB(1)\fP or moving \fB(2)\fP the value of rhs.
   3) Assigns the type and value of rhs. This overload only participates in overload
   resolution if std::decay_t<ValueType> is not the same type as any.

.SH Template parameters

   ValueType               -              contained value type
.SH Type requirements
   -
   std::decay_t<ValueType> must meet the requirements of CopyConstructible.

.SH Parameters

   rhs - object whose contained value to assign

.SH Return value

   *this

.SH Exceptions

   2)
   noexcept specification:  
   noexcept
     
   1,3) Throws bad_alloc or any exception thrown by the constructor of the contained
   type. If an exception is thrown, there are no effects \fI(strong exception guarantee)\fP.

.SH See also

   constructor   constructs an any object
                 \fI(public member function)\fP 

.SH Category:

     * unconditionally noexcept
