.TH std::default_searcher,std::make_default_searcher 3 "2017.04.02" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::default_searcher,std::make_default_searcher \- std::default_searcher,std::make_default_searcher

.SH Synopsis
   Defined in header <functional>
   template< class ForwardIterator1, class BinaryPredicate =
   std::equal_to<> >                                                      \fI(since C++17)\fP
   class default_searcher;

   A class suitable for use with Searcher overload of std::search that delegates the
   search operation to the pre-C++17 standard library's std::search.

   default_searcher is CopyConstructible and CopyAssignable.

.SH Member functions

std::default_searcher::default_searcher

   default_searcher( ForwardIterator pat_first,

                     ForwardIterator pat_last,

                     BinaryPredicate pred = BinaryPredicate());

   Constructs a default_searcher by storing copies of pat_first, pat_last, and pred

.SH Parameters

   pat_first, pat_last - a pair of iterators designating the string to be searched for
   pred                - a callable object used to determine equality

.SH Exceptions

   Any exceptions thrown by the copy constructors of BinaryPredicate or
   ForwardIterator.

std::default_searcher::operator()

   template< class ForwardIterator2 >

   std::pair<ForwardIterator2, ForwardIterator2>

       operator()( ForwardIterator2 first, ForwardIterator2 last ) const;

   The member function called by the Searcher overload of std::search to perform a
   search with this searcher.

   Returns a pair of iterators i, j, where i is std::search(first, last, pat_first,
   pat_last, pred) and j is std::next(i, std::distance(pat_first, pat_last)) unless
   std::search returned last (no match), in which case j equals last as well.

.SH Parameters

   first, last - a pair of iterators designating the string to be examined

.SH Return value

   A pair of iterators to the first and one past last positions in [first, last) where
   a subsequence that compares equal to [pat_first, pat_last) as defined by pred is
   located, or a pair of copies of last otherwise.

   Helper Functions

   template< class ForwardIterator, class BinaryPredicate =
   std::equal_to<> >

   default_searcher<ForwardIterator, BinaryPredicate>
   make_default_searcher(                                                 \fI(since C++17)\fP
       ForwardIterator pat_first,
       ForwardIterator pat_last,

       BinaryPredicate pred = BinaryPredicate());

   Helper function that constructs a std::default_searcher using template argument
   deduction. Equivalent to return default_searcher<ForwardIterator,
   BinaryPredicate>(pat_first, pat_last, pred);

.SH Parameters

   pat_first, pat_last - a pair of iterators designating the string to be searched for
   pred                - a callable object used to determine equality

.SH Return value

   A default_searcher constructed with the arguments pat_first, pat_last, pred.

.SH Example

   
// Run this code

 #include <iostream>
 #include <string>
 #include <algorithm>
 #include <functional>
  
 int main()
 {
     std::string in = "Lorem ipsum dolor sit amet, consectetur adipiscing elit,"
                      " sed do eiusmod tempor incididunt ut labore et dolore magna aliqua";
     std::string needle = "pisci";
     auto it = std::search(in.begin(), in.end(),
                    std::make_default_searcher(
                        needle.begin(), needle.end()));
     if(it != in.end())
         std::cout << "The string " << needle << " found at offset "
                   << it - in.begin() << '\\n';
     else
         std::cout << "The string " << needle << " not found\\n";
 }

.SH Output:

 The string pisci found at offset 43

.SH See also

   search searches for a range of elements
          \fI(function template)\fP 
