.TH std::tuple_size<std::tuple> 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <tuple>
   template< class T >                                                 \fB(1)\fP (since
   class tuple_size; /*undefined*/                                         C++11)
   template< class... Types >
                                                                           (since
   class tuple_size< std::tuple<Types...> >                            \fB(2)\fP C++11)

   : public std::integral_constant<std::size_t, sizeof...(Types)> { };
   template< class T >

   class tuple_size<const T>                                               (since
   : public std::integral_constant<                                    \fB(3)\fP C++11)
   typename std::remove_cv<decltype(tuple_size<T>::value)>::type,

   tuple_size<T>::value> { };
   template< class T >

   class tuple_size< volatile T >                                          (since
   : public std::integral_constant<                                    \fB(4)\fP C++11)
   typename std::remove_cv<decltype(tuple_size<T>::value)>::type,

   tuple_size<T>::value> { };
   template< class T >

   class tuple_size< const volatile T >                                    (since
   : public std::integral_constant<                                    \fB(5)\fP C++11)
   typename std::remove_cv<decltype(tuple_size<T>::value)>::type,

   tuple_size<T>::value> { };

   Provides access to the number of elements in a tuple as a compile-time constant
   expression.

.SH Contents

     * 1 Inherited from
       std::integral_constant

          * 1.1 Member constants
          * 1.2 Member functions
          * 1.3 Member types
          * 1.4 Example
          * 1.5 See also

Inherited from std::integral_constant

.SH Member constants

   value    sizeof...(Types)
   \fB[static]\fP \fI(public static member constant)\fP

.SH Member functions

   operator std::size_t converts the object to std::size_t, returns value
                        \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type std::size_t
   type       std::integral_constant<std::size_t, value>

.SH Example

   
// Run this code

 #include <iostream>
 #include <tuple>

 template <class T>
 void test(T t)
 {
     int a[std::tuple_size<T>::value]; // can be used at compile time

     std::cout << std::tuple_size<T>::value << '\\n'; // or at run time
 }

 int main()
 {
     test(std::make_tuple(1, 2, 3.14));
 }

.SH Output:

 3

.SH See also

   std::tuple_size<std::array> obtains the size of an array
                               \fI(class template specialization)\fP
   std::tuple_size<std::pair>  obtains the size of a pair
   \fI(C++11)\fP                     \fI(class template specialization)\fP
   std::get(std::tuple)        tuple accesses specified element
                               \fI(function template)\fP
   tuple_element               obtains the type of the specified element
                               \fI(class template specialization)\fP
