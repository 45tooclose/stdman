.TH std::valarray::operator[] 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   const T& operator[]( size_t pos ) const;                        \fB(1)\fP
   T& operator[]( size_t pos );                                    \fB(2)\fP
   valarray<T> operator[]( slice slicearr ) const;                 \fB(3)\fP
   slice_array<T> operator[]( slice slicearr );                    \fB(4)\fP
   valarray<T> operator[]( const gslice& gslicearr ) const;        \fB(5)\fP
   gslice_array<T> operator[]( const gslice& gslicearr );          \fB(6)\fP
   valarray<T> operator[]( const valarray<bool>& boolarr ) const;  \fB(7)\fP
   mask_array<T> operator[]( const valarray<bool>& boolarr );      \fB(8)\fP
   valarray<T> operator[]( const valarray<size_t>& indarr ) const; \fB(9)\fP
   indirect_array<T> operator[]( const valarray<size_t>& indarr ); \fB(10)\fP

   Retrieve single elements or portions of the array.

   The const overloads that return element sequences create a new std::valarray object.
   The non-const overloads return classes holding references to the array elements.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Exceptions
     * 4 Precondition
     * 5 Notes

.SH Parameters

    This section is incomplete

.SH Return value

   1,2) A reference to the corresponding element
   3,5,7,9) A std::valarray object containing copies of the selected items
   4,6,8,10) The corresponding data structure containing references to the selected
   items

.SH Exceptions

   \fI(none)\fP

.SH Precondition

   The selected elements must exist.

.SH Notes

     * For proper values of i and j, the following properties are true:

   1) (a[i] = q, a[i]) == q

   For a non-const a.
   2) &a[i+j] == &a[i] + j

   This means that valarray elements are adjacent in memory.
   3) &a[i] != &b[j]

   This holds for every objects a and b that are not aliases of one another.
   This means that there are no aliases in the elements and this property can be used
   to perform some kinds of optimization.

     * References become invalid on resize or when the array is destructed.

.SH Category:

     * Todo without reason
