.TH std::is_heap 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <algorithm>
   template< class RandomIt >                                   \fB(1)\fP \fI(since C++11)\fP
   bool is_heap( RandomIt first, RandomIt last );
   template< class RandomIt, class Compare >                    \fB(2)\fP \fI(since C++11)\fP
   bool is_heap( RandomIt first, RandomIt last, Compare comp );

   Checks if the elements in range [first, last) are a max heap.

   The first version of is_heap uses operator< to compare elements, whereas the second
   uses the given comparison function comp.

.SH Contents

     • 1 Parameters
     • 2 Return value
     • 3 Complexity
     • 4 Notes
     • 5 Example
     • 6 See also

.SH Parameters

   first, last - the range of elements to examine
                 comparison function object (i.e. an object that satisfies the
                 requirements of Compare) which returns true if the first argument is
                 less than the second.

                 The signature of the comparison function should be equivalent to the
                 following:
   comp        -
                  bool cmp(const Type1 &a, const Type2 &b);

                 The signature does not need to have const &, but the function object
                 must not modify the objects passed to it.
                 The types Type1 and Type2 must be such that an object of type RandomIt
                 can be dereferenced and then implicitly converted to both of them. 
.SH Type requirements
   -
   RandomIt must meet the requirements of RandomAccessIterator.

.SH Return value

   true if the range is max heap, false otherwise.

.SH Complexity

   Linear in the distance between first and last

.SH Notes

   A max heap is a range of elements [f,l) that has the following properties:

     • *f is the largest element in the range
     • a new element can be added using std::push_heap()
     • the first element can be removed using std::pop_heap()

   The actual arrangement of the elements is implementation defined.

.SH Example

   
// Run this code

 #include <iostream>
 #include <algorithm>
  
 int main()
 {
     std::vector<int> v { 3, 1, 4, 1, 5, 9 };
  
     std::cout << "initially, v: ";
     for (auto i : v) std::cout << i << ' ';
     std::cout << '\\n';
  
     if (!std::is_heap(v.begin(), v.end())) {
         std::cout << "making heap...\\n";
         std::make_heap(v.begin(), v.end());
     }
  
     std::cout << "after make_heap, v: ";
     for (auto i : v) std::cout << i << ' ';
     std::cout << '\\n';
 }

.SH Output:

 initially, v: 3 1 4 1 5 9
 making heap...
 after make_heap, v: 9 5 4 1 1 3

.SH See also

   is_heap_until finds the largest subrange that is a max heap
   \fI(C++11)\fP       \fI(function template)\fP
