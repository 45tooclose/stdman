.TH std::atomic::load 3 "Sep  4 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   T load( std::memory_order order = std::memory_order_seq_cst ) const;
   T load( std::memory_order order = std::memory_order_seq_cst ) const   \fI(since C++11)\fP
   volatile;

   Atomically loads and returns the current value of the atomic variable. Memory is
   affected according to the value of order.

   order must be one of std::memory_order_relaxed, std::memory_order_consume,
   std::memory_order_acquire or std::memory_order_seq_cst. Otherwise the behavior is
   undefined.

.SH Parameters

   order - memory order constraints to enforce

.SH Return value

   The current value of the atomic variable.

.SH Exceptions

   noexcept specification:
   noexcept

.SH See also

   operator T           loads a value from an atomic object
                        \fI(public member function)\fP
   atomic_load
   atomic_load_explicit atomically obtains the value stored in an atomic object
   \fI(C++11)\fP              \fI(function template)\fP
   \fI(C++11)\fP

.SH Category:

     * unconditionally noexcept
