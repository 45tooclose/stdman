.TH std::uniform_int_distribution 3 "Jun 28 2014" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   Defined in header <random>
   template< class IntType = int >  \fI(since C++11)\fP
   class uniform_int_distribution;

   Produces random integer values i, uniformly distributed on the closed interval [a,
   b], that is, distributed according to the discrete probability function

   P(i|a,b) =

   1
   b âˆ’ a + 1

   .

.SH Member types

   Member type Definition
   result_type IntType
   param_type  the type of the parameter set, unspecified

.SH Member functions

   constructor   constructs new distribution
                 \fI(public member function)\fP 
   reset         resets the internal state of the distribution
                 \fI(public member function)\fP 
.SH Generation
   operator()    generates the next random number in the distribution
                 \fI(public member function)\fP 
.SH Characteristics
   a             returns the distribution parameters
   b             \fI(public member function)\fP 
   param         gets or sets the distribution parameter object
                 \fI(public member function)\fP 
   min           returns the minimum potentially generated value
                 \fI(public member function)\fP 
   max           returns the maximum potentially generated value
                 \fI(public member function)\fP 

.SH Non-member functions

   operator== compares two distribution objects
   operator!= \fI(function)\fP 
   operator<< performs stream input and output on pseudo-random number distribution
   operator>> \fI(function)\fP 

.SH Example

   This program simulates throwing 6-sided dice.

   
// Run this code

 #include <random>
 #include <iostream>
  
 int main()
 {
     std::random_device rd;
     std::mt19937 gen(rd());
     std::uniform_int_distribution<> dis(1, 6);
  
     for (int n=0; n<10; ++n)
         std::cout << dis(gen) << ' ';
     std::cout << '\\n';
 }

.SH Possible output:

 1 1 6 5 2 2 5 5 6 2
