.TH std::is_member_function_pointer 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <type_traits>
   template< class T >                 \fI(since C++11)\fP
   struct is_member_function_pointer;

   Checks whether T is a non-static member function pointer. Provides the member
   constant value which is equal to true, if T is a non-static member function pointer
   type. Otherwise, value is equal to false.

.SH Contents

     * 1 Template parameters
     * 2 Inherited from
       std::integral_constant

          * 2.1 Member constants
          * 2.2 Member functions
          * 2.3 Member types
          * 2.4 Possible implementation
          * 2.5 Example
          * 2.6 See also

.SH Template parameters

   T - a type to check

Inherited from std::integral_constant

.SH Member constants

   value    true if T is a member function pointer type , false otherwise
   \fB[static]\fP \fI(public static member constant)\fP

.SH Member functions

   operator bool converts the object to bool, returns value
                 \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type bool
   type       std::integral_constant<bool, value>

.SH Possible implementation

   template< class T >
   struct is_member_function_pointer_helper : std::false_type {};

   template< class T, class U>
   struct is_member_function_pointer_helper<T U::*> : std::is_function<T> {};

   template< class T >
   struct is_member_function_pointer : is_member_function_pointer_helper<
                                           typename std::remove_cv<T>::type
                                       > {};

.SH Example

   
// Run this code

 #include <type_traits>

 class A {
     void member_function() { }
 };

 int main()
 {
     // fails at compile time if A does not contain member_function as a function.
     static_assert(std::is_member_function_pointer<decltype(&A::member_function)>::value,
                   "Class does not contain member.");
 }

.SH See also

   is_pointer               checks if a type is a pointer type
   \fI(C++11)\fP                  \fI(class template)\fP
   is_member_object_pointer checks if a type is a pointer to a non-static member object
   \fI(C++11)\fP                  \fI(class template)\fP
   is_member_pointer        checks if a type is a pointer to a non-static member
   \fI(C++11)\fP                  function or object
                            \fI(class template)\fP
