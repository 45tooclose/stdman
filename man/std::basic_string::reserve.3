.TH std::basic_string::reserve 3 "Nov 25 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string::reserve \- std::basic_string::reserve

.SH Synopsis
   void reserve( size_type new_cap );

   Increase the capacity of the string to a value that's greater or equal to new_cap.
   If new_cap is greater than the current capacity(), new storage is allocated,
   otherwise the method does nothing.

   If new_cap is greater than capacity(), all iterators and references, including the
   past-the-end iterator, are invalidated. Otherwise, no iterators or references are
   invalidated.

.SH Parameters

   new_cap - new capacity of the string

.SH Return value

   \fI(none)\fP

.SH Complexity

   At most linear in the size() of the string

.SH Notes

   reserve() cannot be used to reduce the capacity of the container; to that end
   shrink_to_fit() is provided.

.SH See also

            returns the number of characters that can be held in currently allocated
   capacity storage
            \fI(public member function)\fP 
