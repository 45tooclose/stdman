.TH std::copy_n 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <algorithm>
   template< class InputIt, class Size, class OutputIt >
   OutputIt copy_n( InputIt first, Size count, OutputIt result );

   Copies exactly count values from the range beginning at first to the range beginning
   at result, if count>0. Does nothing otherwise.

.SH Contents

     • 1 Parameters
     • 2 Return value
     • 3 Complexity
     • 4 Possible implementation
     • 5 Example
     • 6 See also

.SH Parameters

   first  - the beginning of the range of elements to copy from
   count  - number of the elements to copy
   result - the beginning of the destination range
.SH Type requirements
   -
   InputIt must meet the requirements of InputIterator.
   -
   OutputIt must meet the requirements of OutputIterator.

.SH Return value

   Iterator in the destination range, pointing past the last element copied if count>0
   or result otherwise.

.SH Complexity

   Exactly count assignments, if count>0.

.SH Possible implementation

   template< class InputIt, class Size, class OutputIt>
   OutputIt copy_n(InputIt first, Size count, OutputIt result)
   {
       if (count > 0) {
           *result++ = *first;
           for (Size i = 1; i < count; ++i) {
               *result++ = *++first;
           }
       }
       return result;
   }

.SH Example

   
// Run this code

 #include <iostream>
 #include <string>
 #include <algorithm>
 #include <iterator>
  
 int main()
 {
     std::string in = "1234567890";
     std::string out;
  
     std::copy_n(in.begin(), 4, std::back_inserter(out));
     std::cout << out << '\\n';
 }

.SH Output:

 1234

.SH See also

   copy    copies a range of elements to a new location
   copy_if \fI(function template)\fP
   \fI(C++11)\fP
