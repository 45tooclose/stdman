.TH std::basic_iostream 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <istream>
   template<

       class CharT,
       class Traits = std::char_traits<CharT>

   > class basic_iostream;

   The class template basic_iostream provides support for high level input/output
   operations on streams. The supported operations include sequential reading or
   writing and formatting. This functionality is implemented over the interface,
   provided by the basic_streambuf class. It is accessed through basic_ios class.

   std-basic iostream-inheritance.svg
   About this image

                                   Inheritance diagram

   Two specializations for common character types are defined:

   Defined in header <istream>
   Type      Definition
   iostream  basic_iostream<char>
   wiostream basic_iostream<wchar_t>

.SH Contents

     • 1 Member types
     • 2 Member functions
     • 3 Protected member functions
     • 4 Inherited from
       std::basic_istream

          • 4.1 Member functions

               • 4.1.1 Formatted input
               • 4.1.2 Unformatted input
               • 4.1.3 Positioning
               • 4.1.4 Miscellaneous

          • 4.2 Member classes

     • 5 Inherited from
       std::basic_ostream

          • 5.1 Member functions

               • 5.1.1 Formatted input
               • 5.1.2 Unformatted input
               • 5.1.3 Positioning
               • 5.1.4 Miscellaneous

          • 5.2 Member classes

     • 6 Inherited from
       std::basic_ios

          • 6.1 Member types

               • 6.1.1 State functions
               • 6.1.2 Formatting
               • 6.1.3 Miscellaneous

     • 7 Inherited from
       std::ios_base

          • 7.1 Member functions

               • 7.1.1 Formatting
               • 7.1.2 Locales
               • 7.1.3 Internal extensible array
               • 7.1.4 Miscellaneous
               • 7.1.5 Member classes

          • 7.2 Member types and constants

.SH Member types

   Member type Definition
   char_type   CharT
   traits_type Traits
   int_type    Traits::int_type
   pos_type    Traits::pos_type
   off_type    Traits::off_type

.SH Member functions

   constructor   constructs the object
                 \fI(public member function)\fP
   destructor    destructs the object
   \fB[virtual]\fP     \fI(virtual public member function)\fP

.SH Protected member functions

   operator= move-assigns another basic_iostream
   \fI(C++11)\fP   \fI(public member function)\fP
   swap      exchanges the state with another basic_iostream
   \fI(C++11)\fP   \fI(public member function)\fP

Inherited from std::basic_istream

.SH Member functions

.SH Formatted input
   operator>> extracts formatted data
              \fI(public member function of std::basic_istream)\fP
.SH Unformatted input
   get        extracts characters
              \fI(public member function of std::basic_istream)\fP
   peek       reads the next character without extracting it
              \fI(public member function of std::basic_istream)\fP
   unget      unextracts a character
              \fI(public member function of std::basic_istream)\fP
   putback    puts character into input stream
              \fI(public member function of std::basic_istream)\fP
   getline    extracts characters until the given character is found
              \fI(public member function of std::basic_istream)\fP
   ignore     extracts and discards characters until the given character is found
              \fI(public member function of std::basic_istream)\fP
   read       extracts blocks of characters
              \fI(public member function of std::basic_istream)\fP
   readsome   extracts already available blocks of characters
              \fI(public member function of std::basic_istream)\fP
              returns number of characters extracted by last unformatted input
   gcount     operation
              \fI(public member function of std::basic_istream)\fP
.SH Positioning
   tellg      returns the input position indicator
              \fI(public member function of std::basic_istream)\fP
   seekg      sets the input position indicator
              \fI(public member function of std::basic_istream)\fP
.SH Miscellaneous
   sync       synchronizes with the underlying storage device
              \fI(public member function of std::basic_istream)\fP

.SH Member classes

   sentry implements basic logic for preparation of the stream for input operations
          \fI(public member class of std::basic_istream)\fP

Inherited from std::basic_ostream

.SH Member functions

.SH Formatted input
   operator<< inserts formatted data
              \fI(public member function of std::basic_ostream)\fP
.SH Unformatted input
   put        inserts a character
              \fI(public member function of std::basic_ostream)\fP
   write      inserts blocks of characters
              \fI(public member function of std::basic_ostream)\fP
.SH Positioning
   tellp      returns the output position indicator
              \fI(public member function of std::basic_ostream)\fP
   seekp      sets the output position indicator
              \fI(public member function of std::basic_ostream)\fP
.SH Miscellaneous
   flush      synchronizes with the underlying storage device
              \fI(public member function of std::basic_ostream)\fP

.SH Member classes

   sentry implements basic logic for preparation of the stream for output operations
          \fI(public member class of std::basic_ostream)\fP

Inherited from std::basic_ios

.SH Member types

   Member type Definition
   char_type   CharT
   traits_type Traits
   int_type    Traits::int_type
   pos_type    Traits::pos_type
   off_type    Traits::off_type

.SH State functions
   good           checks if no error has occurred i.e. I/O operations are available
                  \fI(public member function of std::basic_ios)\fP
   eof            checks if end-of-file has been reached
                  \fI(public member function of std::basic_ios)\fP
   fail           checks if a recoverable error has occurred
                  \fI(public member function of std::basic_ios)\fP
   bad            checks if a non-recoverable error has occurred
                  \fI(public member function of std::basic_ios)\fP
   operator!      checks if an error has occurred (synonym of fail()
                  \fI(public member function of std::basic_ios)\fP
   operator void*
   operator bool  checks if no error has occurred (synonym of !fail())
   \fI(until C++11)\fP  \fI(public member function of std::basic_ios)\fP
   \fI(since C++11)\fP
   rdstate        returns state flags
                  \fI(public member function of std::basic_ios)\fP
   setstate       sets state flags
                  \fI(public member function of std::basic_ios)\fP
   clear          clears error and eof flags
                  \fI(public member function of std::basic_ios)\fP
.SH Formatting
   copyfmt        copies formatting information
                  \fI(public member function of std::basic_ios)\fP
   fill           manages the fill character
                  \fI(public member function of std::basic_ios)\fP
.SH Miscellaneous
   exceptions     manages exception mask
                  \fI(public member function of std::basic_ios)\fP
   imbue          sets the locale
                  \fI(public member function of std::basic_ios)\fP
   rdbuf          manages associated stream buffer
                  \fI(public member function of std::basic_ios)\fP
   tie            manages tied stream
                  \fI(public member function of std::basic_ios)\fP
   narrow         narrows characters
                  \fI(public member function of std::basic_ios)\fP
   widen          widens characters
                  \fI(public member function of std::basic_ios)\fP

Inherited from std::ios_base

.SH Member functions

.SH Formatting
   flags             manages format flags
                     \fI(public member function of std::ios_base)\fP
   setf              sets specific format flag
                     \fI(public member function of std::ios_base)\fP
   unsetf            clears specific format flag
                     \fI(public member function of std::ios_base)\fP
   precision         manages decimal precision of floating point operations
                     \fI(public member function of std::ios_base)\fP
   width             manages field width
                     \fI(public member function of std::ios_base)\fP
.SH Locales
   imbue             sets locale
                     \fI(public member function of std::ios_base)\fP
   getloc            returns current locale
                     \fI(public member function of std::ios_base)\fP
.SH Internal extensible array
   xalloc            returns a program-wide unique integer that is safe to use as index
   \fB[static]\fP          to pword() and iword()
                     \fI(public static member function of std::ios_base)\fP
                     resizes the private storage if necessary and access to the long
   iword             element at the given index
                     \fI(public member function of std::ios_base)\fP
                     resizes the private storage if necessary and access to the void*
   pword             element at the given index
                     \fI(public member function of std::ios_base)\fP
.SH Miscellaneous
   register_callback registers event callback function
                     \fI(public member function of std::ios_base)\fP
   sync_with_stdio   sets whether C++ and C IO libraries are interoperable
   \fB[static]\fP          \fI(public static member function of std::ios_base)\fP
.SH Member classes
   failure           stream exception
                     \fI(public member class of std::ios_base)\fP
   Init              initializes standard stream objects
                     \fI(public member class of std::ios_base)\fP

.SH Member types and constants
   Type           Explanation
                  stream open mode type

                  The following constants are also defined:

                  Constant Explanation
                  app      seek to the end of stream before each write
   openmode       binary   open in binary mode
                  in       open for reading
                  out      open for writing
                  trunc    discard the contents of the stream when opening
                  ate      seek to the end of stream immediately after open

                  \fI(typedef)\fP
                  formatting flags type

                  The following constants are also defined:

                  Constant    Explanation
                  dec         use decimal base for integer I/O
                  oct         use octal base for integer I/O
                  hex         use hexadecimal base for integer I/O
                  basefield   dec|oct|hex|0. Useful for masking operations
                  left        left adjustment (adds fill characters to the right)
                  right       right adjustment (adds fill characters to the left)
                  internal    internal adjustment (adds fill characters to the internal
                              designated point)
                  adjustfield left|right|internal. Useful for masking operations
                  scientific  generate floating point types using scientific notation,
   fmtflags                   or hex notation if combined with fixed
                  fixed       generate floating point types using fixed notation, or
                              hex notation if combined with scientific
                  floatfield  scientific|fixed|(scientific|fixed)|0. Useful for masking
                              operations
                  boolalpha   insert and extract bool type in alphanumeric format
                  showbase    generate a prefix indicating the numeric base for integer
                              output, require the currency indicator in monetary I/O
                  showpoint   generate a decimal-point character unconditionally for
                              floating-point number output
                  showpos     generate a + character for non-negative numeric output
                  skipws      skip leading whitespace before certain input operations
                  unitbuf     flush the output after each output operation
                  uppercase   replace certain lowercase letters with their uppercase
                              equivalents in certain output output operations

                  \fI(typedef)\fP
                  state of the stream type

                  The following constants are also defined:

                  Constant Explanation
   iostate        goodbit  no error
                  badbit   irrecoverable stream error
                  failbit  input/output operation failed (formatting or extraction
                           error)
                  eofbit   associated input sequence has reached end-of-file

                  \fI(typedef)\fP
                  seeking direction type

                  The following constants are also defined:

   seekdir        Constant Explanation
                  beg      the beginning of a stream
                  end      the ending of a stream
                  cur      the current position of stream position indicator

                  \fI(typedef)\fP
   event          specifies event type
                  \fI(enum)\fP
   event_callback callback function type
                  \fI(typedef)\fP
