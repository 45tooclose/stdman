.TH std::exp(std::complex) 3 "Jun 28 2014" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   Defined in header <complex>
   template< class T >
   complex<T> exp( const complex<T>& z );

   Compute e (Euler's number, 2.7182818) raised to the complex base-e exponential of x.

.SH Parameters

   z - complex value

.SH Return value

   e raised to a complex power.

.SH Example

   
// Run this code

 #include <complex>
 #include <iostream>
  
 int main()
 {
    const double pi = std::acos(-1);
    const std::complex<double> i(0, 1);
  
    std::cout << std::fixed << " exp(i*pi) = " << std::exp(i * pi) << '\\n';
 }

.SH Output:

 exp(i*pi) = (-1.000000,0.000000)

.SH See also

   exp               returns e raised to the given power (e^x)
                     \fI(function)\fP 
   pow(std::complex) complex power, one or both arguments may be a complex number
                     \fI(function template)\fP 
                     complex natural logarithm with the branch cuts along the negative
   log(std::complex) real axis
                     \fI(function template)\fP 
