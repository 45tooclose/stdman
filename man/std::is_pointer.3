.TH std::is_pointer 3 "Jun 28 2014" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   Defined in header <type_traits>
   template< class T >              \fI(since C++11)\fP
   struct is_pointer;

   Checks whether T is a pointer to object or a pointer to function (not a pointer to a
   non-static member object or to a data member). Provides the member constant value
   which is equal to true, if T is a object pointer type. Otherwise, value is equal to
   false.

.SH Template parameters

   T - a type to check

Inherited from std::integral_constant

.SH Member constants

   value    true if T is a pointer type , false otherwise
   \fB[static]\fP \fI(public static member constant)\fP

.SH Member functions

   operator bool converts the object to bool, returns value
                 \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type bool
   type       std::integral_constant<bool, value>

.SH Possible implementation

template< class T > struct is_pointer_helper     : std::false_type {};
template< class T > struct is_pointer_helper<T*> : std::true_type {};
template< class T > struct is_pointer : is_pointer_helper<typename std::remove_cv<T>::type> {};

.SH Example

   
// Run this code

 #include <iostream>
 #include <type_traits>
  
 class A {};
  
 int main()
 {
     std::cout << std::boolalpha;
     std::cout << std::is_pointer<A>::value << '\\n';
     std::cout << std::is_pointer<A*>::value << '\\n';
     std::cout << std::is_pointer<float>::value << '\\n';
     std::cout << std::is_pointer<int>::value << '\\n';
     std::cout << std::is_pointer<int*>::value << '\\n';
     std::cout << std::is_pointer<int**>::value << '\\n';
 }

.SH Output:

 false
 true
 false
 false
 true
 true

.SH See also

   is_member_pointer          checks if a type is a pointer to a non-static member
   \fI(C++11)\fP                    function or object
                              \fI(class template)\fP 
   is_member_object_pointer   checks if a type is a pointer to a non-static member
   \fI(C++11)\fP                    object
                              \fI(class template)\fP 
   is_member_function_pointer checks if a type is a pointer to a non-static member
   \fI(C++11)\fP                    function
                              \fI(class template)\fP 
   is_array                   checks if a type is an array type
   \fI(C++11)\fP                    \fI(class template)\fP 
   is_scalar                  checks if a type is scalar type
   \fI(C++11)\fP                    \fI(class template)\fP 
