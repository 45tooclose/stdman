.TH std::vector::reserve 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   void reserve( size_type new_cap );

   Increase the capacity of the container to a value that's greater or equal to
   new_cap. If new_cap is greater than the current capacity(), new storage is
   allocated, otherwise the method does nothing.

   If new_cap is greater than capacity(), all iterators and references, including the
   past-the-end iterator, are invalidated. Otherwise, no iterators or references are
   invalidated.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Exceptions
     * 4 Complexity
     * 5 Notes
     * 6 See also

.SH Parameters

   new_cap    -    new capacity of the container
.SH Type requirements
   -
   T must meet the requirements of MoveInsertable.

.SH Return value

   \fI(none)\fP

.SH Exceptions

   std::length_error if new_cap > max_size().

.SH Complexity

   At most linear in the size() of the container.

.SH Notes

   reserve() cannot be used to reduce the capacity of the container, to that end
   shrink_to_fit() is provided.

.SH See also

                 returns the number of elements that can be held in currently allocated
   capacity      storage
                 \fI(public member function)\fP
   resize        changes the number of elements stored
                 \fI(public member function)\fP
   shrink_to_fit reduces memory usage by freeing unused memory
   \fI(C++11)\fP       \fI(public member function)\fP
