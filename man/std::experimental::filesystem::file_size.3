.TH std::experimental::filesystem::file_size 3 "Nov 25 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::filesystem::file_size \- std::experimental::filesystem::file_size

.SH Synopsis
   Defined in header <experimental/filesystem>
   uintmax_t file_size( const path& p );                 \fB(1)\fP (filesystem TS)
   uintmax_t file_size( const path& p, error_code& ec ); \fB(2)\fP (filesystem TS)

   Returns the size of a regular file. If p does not resolve to a regular file, returns
   -1.

   The second version sets ec to an appropriate error code if an error occurs.
   Otherwise, ec is cleared with a call to ec.clear().

    This section is incomplete
    Reason: does the first version throw if p is not a regular file?

.SH Parameters

   p  - path to the regular file
   ec - error code to modify in case of error

.SH Return value

   The size of the file or -1 on error.

.SH Exceptions

   1) filesystem_error if an error occurs. The exception object is constructed with p
   as an argument. The error code is set to an appropriate error code for the error
   that caused the failure.
   2)
   noexcept specification:  
   noexcept
     

.SH See also

    This section is incomplete

   Categories:

     * Todo with reason
     * Todo without reason
