.TH std::memset 3 "Sep  4 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   Defined in header <cstring>
   void* memset( void* dest, int ch, std::size_t count );

   Converts the value ch to unsigned char and copies it into each of the first count
   characters of the object pointed to by dest. If the object is not trivially-copyable
   (e.g., scalar, array, or a C-compatible struct), the behavior is undefined. If count
   is greater than the size of the object pointed to by dest, the behavior is
   undefined.

.SH Parameters

   dest  - pointer to the object to fill
   ch    - fill byte
   count - number of bytes to fill

.SH Return value

   dest

.SH Notes

   std::memset may be optimized away (under the as-if rules) if the object modified by
   this function is not accessed again for the rest of its lifetime. For that reason,
   this function cannot be used to scrub memory (e.g. to fill an array that stored a
   password with zeroes).

.SH Example

   
// Run this code

 #include <iostream>
 #include <cstring>

 int main()
 {
     int a[20];
     std::memset(a, 0, sizeof a);
     for (int ai : a) std::cout << ai;
 }

.SH Output:

 00000000000000000000

.SH See also

   memcpy                copies one buffer to another
                         \fI(function)\fP
                         copies the given wide character to every position in a wide
   wmemset               character array
                         \fI(function)\fP
   fill                  assigns a range of elements a certain value
                         \fI(function template)\fP
   fill_n                assigns a value to a number of elements
                         \fI(function template)\fP
   is_trivially_copyable checks if a type is trivially copyable
   \fI(C++11)\fP               \fI(class template)\fP
   C documentation for
   memset
