.TH std::ostream_iterator 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <iterator>
   template< class T,

   class CharT = char,
   class Traits = std::char_traits<CharT>>
   class ostream_iterator : public std::iterator<std::output_iterator_tag,

   void, void, void, void>

   std::ostream_iterator is a single-pass output iterator that writes successive
   objects of type T into the std::basic_ostream object for which it was constructed,
   using operator<<. Optional delimiter string is written to the output stream after
   every write operation. The write operation is performed when the iterator (whether
   dereferenced or not) is assigned to. Incrementing the std::ostream_iterator is a
   no-op.

   In a typical implementation, the only data members of std::ostream_iterator are a
   pointer to the associated std::basic_ostream and a pointer to the first character in
   the delimiter string.

   When writing characters, std::ostreambuf_iterator is more efficient, since it avoids
   the overhead of constructing and destructing the sentry object once per character.

.SH Contents

     • 1 Member types
     • 2 Member functions
     • 3 Inherited from
       std::iterator

          • 3.1 Member types
          • 3.2 Example
          • 3.3 See also

.SH Member types

   Member type  Definition
   char_type    CharT
   traits_type  Traits
   ostream_type std::basic_ostream<CharT, Traits>

.SH Member functions

   constructor     constructs a new ostream_iterator
                   \fI(public member function)\fP
   destructor      destructs an ostream_iterator
                   \fI(public member function)\fP
   operator=       writes a object to the associated output sequence
                   \fI(public member function)\fP
   operator*       no-op
                   \fI(public member function)\fP
   operator++      no-op
   operator++(int) \fI(public member function)\fP

Inherited from std::iterator

.SH Member types

   Member type       Definition
   value_type        void
   difference_type   void
   pointer           void
   reference         void
   iterator_category std::output_iterator_tag

.SH Example

   
// Run this code

 #include <iostream>
 #include <sstream>
 #include <iterator>
 #include <algorithm>

 int main()
 {
     std::istringstream str("0.1 0.2 0.3 0.4");
     std::partial_sum(std::istream_iterator<double>(str),
                       std::istream_iterator<double>(),
                       std::ostream_iterator<double>(std::cout, " "));
 }

.SH Output:

 0.1 0.3 0.6 1

.SH See also

   ostreambuf_iterator output iterator that writes to std::basic_streambuf
                       \fI(class template)\fP
   istream_iterator    input iterator that reads from std::basic_istream
                       \fI(class template)\fP
