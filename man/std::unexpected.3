.TH std::unexpected 3 "Nov 16 2016" "2.1 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unexpected \- std::unexpected

.SH Synopsis
   Defined in header <exception>
   void unexpected();               \fI(until C++11)\fP
   [[noreturn]] void unexpected();  \fI(since C++11)\fP
                                    \fB(deprecated)\fP

   std::unexpected() is called by the C++ runtime when a dynamic exception
   specification is violated: an exception is thrown from a function whose exception
   specification forbids exceptions of this type.

   std::unexpected() may also be called directly from the program.

   In either case, std::unexpected calls the currently installed
   std::unexpected_handler. The default std::unexpected_handler calls std::terminate.

   If a destructor reset the unexpected handler during stack unwinding
   and the unwinding later led to unexpected being called, the handler
   that was installed at the end of the throw expression is the one that  \fI(until C++11)\fP
   will be called. (note: it was ambiguous whether re-throwing applied
   the new handlers)
   If a destructor reset the unexpected handler during stack unwinding,
   it is unspecified which handler is called if the unwinding later led   \fI(since C++17)\fP
   to unexpected being called.

.SH Parameters

   \fI(none)\fP

.SH Return value

   \fI(none)\fP

.SH Exceptions

   Throw any exception thrown by the currently installed std::unexpected_handler

.SH See also

   unexpected_handler       the type of the function called by std::unexpected
   (deprecated since C++11) \fI(typedef)\fP
