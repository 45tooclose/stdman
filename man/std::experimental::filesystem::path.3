.TH std::experimental::filesystem::path 3 "Nov 25 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::filesystem::path \- std::experimental::filesystem::path

.SH Synopsis
   Defined in header <experimental/filesystem>
   class path;                                  (filesystem TS)

   Objects of type path represent a path. Only syntactic aspects of paths are handled:
   the pathname may represent a non-existing path or even one that is not allowed on
   the current operating or file system.

   The path can be traversed element-wise via iterators returned by the begin() and
   end() functions.

   Calling any non-const member function of a path invalidates all iterators referring
   to elements of that object.

   The forward traversal is done in the following order:

     * The root name element, if any
     * The root directory element, if any. The element is presented in generic format,
       thus lexicographical comparisons work correctly.
     * Each successive filename element.
     * . if one or mare trailing non-root / characters are present.

.SH Member types

   Type           Definition
   value_type     todo
   string_type    std::basic_string<value_type>
   iterator       a constant BidirectionalIterator with a value_type of path
   const_iterator todo

.SH Member constants

   constexpr value_type preferred_separator todo
   \fB[static]\fP                                 \fI(public static member constant)\fP

.SH Member functions

   constructor          constructs a path
                        \fI(public member function)\fP 
   destructor           destroys a path object
                        \fI(public member function)\fP 
   operator=            assigns another path
                        \fI(public member function)\fP 
   assign               assigns contents
                        \fI(public member function)\fP 
         Concatenation
   append               appends elements to the path
   operator/=           \fI(public member function)\fP 
   concat               concatenates two paths
   operator+=           \fI(public member function)\fP 
.SH Modifiers
   clear                erases the contents
                        \fI(public member function)\fP 
   make_preferred       converts directory separators to preferred directory separator
                        \fI(public member function)\fP 
   remove_filename      removes filename path component
                        \fI(public member function)\fP 
   replace_filename     replaces the last path component with another path
                        \fI(public member function)\fP 
   replace_extension    replaces the extension
                        \fI(public member function)\fP 
   swap                 swaps two paths
                        \fI(public member function)\fP 
         Format observers
   native               returns the native version of the path
   operator string_type \fI(public member function)\fP 
   c_str                returns the native version of the path
                        \fI(public member function)\fP 
   string
   wstring              returns the path in native pathname format converted to a
   u8string             string
   u16string            \fI(public member function)\fP 
   u32string
   generic_string
   generic_wstring      returns the path in generic pathname format converted to a
   generic_u8string     string
   generic_u16string    \fI(public member function)\fP 
   generic_u32string
         Compare
                        compares the lexical representations of two paths
   compare              lexicographically
                        \fI(public member function)\fP 
         Decomposition
   root_name            returns the root-name of the path, if present
                        \fI(public member function)\fP 
   root_directory       returns the root directory of the path, if present
                        \fI(public member function)\fP 
   root_path            returns the root path of the path, if present
                        \fI(public member function)\fP 
   relative_path        returns path relative to the root path
                        \fI(public member function)\fP 
   parent_path          returns the path of the parent path
                        \fI(public member function)\fP 
   filename             returns the filename path component
                        \fI(public member function)\fP 
   stem                 returns the stem path component
                        \fI(public member function)\fP 
   extension            returns the file extension path component
                        \fI(public member function)\fP 
         Queries
   empty                checks if the path is empty
                        \fI(public member function)\fP 
   has_root_path
   has_root_name
   has_root_directory
   has_relative_path    checks if the corresponding path element is not empty
   has_parent_path      \fI(public member function)\fP 
   has_filename
   has_stem
   has_extension
   is_absolute          checks if root_path() uniquely identifies file system location
   is_relative          \fI(public member function)\fP 
.SH Iterators
   begin                returns an iterator to the beginning of element list
                        \fI(public member function)\fP 
   end                  returns an iterator to the end of element list
                        \fI(public member function)\fP 

.SH Non-member functions

   swap(std::fs::path) swaps two paths
                       \fI(function)\fP 
   operator==
   operator!=
   operator<           lexicographically compares two paths
   operator<=          \fI(function)\fP 
   operator>
   operator>=
   operator/           concatenates two paths
                       \fI(function)\fP 
   operator<<          performs stream input and output on a path
   operator>>          \fI(function)\fP 
   u8path              creates a path from a UTF-8 encoded source
                       \fI(function)\fP 
