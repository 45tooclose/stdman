.TH std::basic_string::data 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   const CharT* data() const;

   Returns pointer to the underlying array serving as character storage. The pointer is
   such that the range [data(); data() + size()) is valid and the values in it
   correspond to the values stored in the string.

   The returned array is not required to be null-terminated.
                                                                          \fI(until C++11)\fP
   If empty() returns true, the pointer is a non-null pointer that should
   not be dereferenced.
   The returned array is null-terminated, that is, data() and c_str()
   perform the same function.
                                                                          \fI(since C++11)\fP
   If empty() returns true, the pointer points to a single null
   character.

   The pointer obtained from data() may be invalidated by:

     * Passing a non-const reference to the string to any standard library function, or
     * Calling non-const member functions on the string, excluding operator[](), at(),
       front(), back(), begin(), end(), rbegin(), rend().

   Modifying the character array accessed through data is undefined behavior.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Complexity
     * 4 Exceptions
     * 5 See also

.SH Parameters

   \fI(none)\fP

.SH Return value

   A pointer to the underlying character storage.

   data()[i] == operator[](i) for every i in [0, size()).   \fI(until C++11)\fP
   data() + i == &operator[](i) for every i in [0, size()]. \fI(since C++11)\fP

.SH Complexity

   Constant.

.SH Exceptions

   \fI(none)\fP                  \fI(until C++11)\fP
   noexcept specification: \fI(since C++11)\fP
   noexcept

.SH See also

   front   accesses the first character
   \fI(C++11)\fP \fI(public member function)\fP
   back    accesses the last character
   \fI(C++11)\fP \fI(public member function)\fP
   c_str   returns a non-modifiable standard C character array version of the string
           \fI(public member function)\fP
