.TH std::negate<void> 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <functional>
   template<>                      \fI(since C++14)\fP
   class negate<void>;

   std::negate<> is a specialization of std::negate with parameter and return type
   deduced.

.SH Contents

     * 1 Member types
     * 2 Member functions
     * 3
       std::negate<>::operator()

          * 3.1 Parameters
          * 3.2 Return value
          * 3.3 Notes
          * 3.4 Example

.SH Member types

   Member type    Definition
   is_transparent /* unspecified */

.SH Member functions

   operator() returns its negated argument
              \fI(public member function)\fP

                                std::negate<>::operator()

   template< class T >

   constexpr auto operator()( T&& arg ) const

   -> decltype(-std::forward<T>(arg));

   Returns the result of negating arg (or whatever the unary operator- is overloaded to
   do)

.SH Parameters

   arg - value to negate

.SH Return value

   The result of -arg.

.SH Notes

   The member type is_transparent indicates to the caller that this function object is
   a transparent function object: it accepts arguments of arbitrary types and uses
   perfect forwarding, which avoids unnecessary copying and conversion when the
   function object is used in heterogeneous context, or with rvalue arguments. In
   particular, template functions such as std::set::find and std::set::lower_bound make
   use of this member type on their Compare types.

.SH Example

    This section is incomplete
    Reason: no example

.SH Category:

     * Todo no example
