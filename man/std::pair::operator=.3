.TH std::pair::operator= 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   pair& operator=( const pair& other );        \fB(1)\fP
   template< class U1, class U2 >               \fB(2)\fP
   pair& operator=( const pair<U1,U2>& other );
   pair& operator=( pair&& other );             \fB(3)\fP \fI(since C++11)\fP
   template< class U1, class U2 >               \fB(4)\fP \fI(since C++11)\fP
   pair& operator=( pair<U1,U2>&& other );

   Replaces the contents of the pair.

   1) Copy assignment operator. Replaces the contents with a copy of the contents of
   other.
   2) Assigns other.first to first and other.second to second
   3) Move assignment operator. Replaces the contents with those of other using move
   semantics.
   4) Assigns std::forward<U1>(p.first) to first and std::forward<U2>(p.second) to
   second.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Exceptions
     * 4 Example
     * 5 See also

.SH Parameters

   other - pair of values to replace the contents of this pair

.SH Return value

   *this

.SH Exceptions

   1-2) \fI(none)\fP
   3)

   \fI(none)\fP                                   \fI(until C++11)\fP
   noexcept specification: \fI(since C++11)\fP
   noexcept(

   is_nothrow_move_assignable<T1>::value && \fI(since C++11)\fP
   is_nothrow_move_assignable<T2>::value

   )

   4) \fI(none)\fP

.SH Example

    This section is incomplete
    Reason: no example

.SH See also


.SH Category:

     * Todo no example
