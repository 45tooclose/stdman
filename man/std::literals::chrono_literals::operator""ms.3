.TH std::literals::chrono_literals::operator""ms 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <chrono>
   constexpr std::chrono::milliseconds operator "" ms(unsigned long   \fB(1)\fP \fI(since C++14)\fP
   long ms);
   constexpr std::chrono::duration</*unspecified*/,                   \fB(2)\fP \fI(since C++14)\fP
   std::milli> operator "" ms(long double ms);

   Forms a std::chrono::duration literal representing milliseconds.

   1) integer literal, returns exactly std::chrono::milliseconds(ms)
   2) floating-point literal, returns a floating-point duration equivalent to
   std::chrono::milliseconds

.SH Contents

     • 1 Parameters
     • 2 Return value
     • 3 Possible implementation
     • 4 Notes
     • 5 Example
     • 6 See also

.SH Parameters

   ms - the number of milliseconds

.SH Return value

   The std::chrono::duration literal.

.SH Possible implementation

   constexpr std::chrono::milliseconds operator ""ms(unsigned long long ms)
   {
       return chrono::milliseconds(ms);
   }
   constexpr std::chrono::duration<long double, std::milli> operator ""ms(long double ms)
   {
       return std::chrono::duration<long double, std::milli>(ms);
   }

.SH Notes

   These operators are declared in the namespace std::literals::chrono_literals, where
   both literals and chrono_literals are inline namespaces.

.SH Example

   
// Run this code

 #include <iostream>
 #include <chrono>

 int main()
 {
     using namespace std::literals::chrono_literals;
     auto d1 = 250ms;
     std::chrono::milliseconds d2 = 1s;
     std::cout << "250ms = " << d1.count() << " milliseconds\\n"
               << "1 = " << d2.count() << " milliseconds\\n";
 }

.SH Output:

 250ms = 250 milliseconds
 1 = 1000 milliseconds

.SH See also

   constructor   constructs new duration
                 \fI(public member function of std::chrono::duration)\fP
