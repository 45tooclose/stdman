.TH std::stof,std::stod,std::stold 3 "Nov 25 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::stof,std::stod,std::stold \- std::stof,std::stod,std::stold

.SH Synopsis
   Defined in header <string>
   float       stof( const std::string& str, size_t *pos = 0 );  \fB(1)\fP \fI(since C++11)\fP
   double      stod( const std::string& str, size_t *pos = 0 );  \fB(2)\fP \fI(since C++11)\fP
   long double stold( const std::string& str, size_t *pos = 0 ); \fB(3)\fP \fI(since C++11)\fP

   Interprets a floating point value in a string str.

   1) calls std::strtod(str.c_str(), pos)
   2) calls std::strtod(str.c_str(), pos)
   3) calls std::strtold(str.c_str(), pos)

   Function discards any whitespace characters (as determined by std::isspace()) until
   first non-whitespace character is found. Then it takes as many characters as
   possible to form a valid floating point representation and converts them to floating
   point value. The valid floating point value can be one of the following:

     * decimal floating point expression. It consists of the following parts:

     * (optional) plus or minus sign
     * nonempty sequence of decimal digits optionally containing a decimal point
       character (defines significand)
     * (optional) e or E followed with optional minus or plus sign and nonempty
       sequence of decimal digits (defines exponent)

     * binary floating point expression. It consists of the following parts:

     * (optional) plus or minus sign
     * 0x or 0X
     * nonempty sequence of hexadecimal digits optionally containing a decimal point
       character (defines significand)
     * (optional) p or P followed with optional minus or plus sign and nonempty
       sequence of decimal digits (defines exponent)

     * infinity expression. It consists of the following parts:

     * (optional) plus or minus sign
     * INF or INFINITY ignoring case

     * not-a-number expression. It consists of the following parts:

     * (optional) plus or minus sign
     * NAN or NAN(char_sequence) ignoring case of the NAN part. char_sequence can only
       contain alphanumeric characters. The result is a quiet NaN floating point value.

   The index of the first unconverted character is stored in pos. If NULL is passed as
   pos, it is ignored.

.SH Parameters

   str - the string to convert
   pos - address of integer to store the index of the first unconverted character

.SH Return value

   The string converted to the specified floating point type.

.SH Exceptions

   std::invalid_argument if no conversion could be performed

   std::out_of_range if the converted value would fall out of the range of the result
   type or if the underlying function (strtod or strtold) sets errno to ERANGE.

.SH See also

   stoi
   stol
   stoll   converts a string to a signed integer
   \fI(C++11)\fP \fI(function)\fP 
   \fI(C++11)\fP
   \fI(C++11)\fP
   stoul
   stoull  converts a string to an unsigned integer
   \fI(C++11)\fP \fI(function)\fP 
   \fI(C++11)\fP
