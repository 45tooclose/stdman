.TH std::strcmp 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <cstring>
   int strcmp( const char *lhs, const char *rhs );

   Compares two null-terminated byte strings. The comparison is done lexicographically.

   Both lhs and rhs should point to valid strings.

.SH Contents

     • 1 Parameters
     • 2 Return value
     • 3 Example
     • 4 See also

.SH Parameters

   lhs, rhs - pointers to the null-terminated byte strings to compare

.SH Return value

   Negative value if lhs is less than rhs.

   0 if lhs is equal to rhs.

   Positive value if lhs is greater than rhs.

.SH Example

   
// Run this code

 #include <vector>
 #include <cstring>
 #include <algorithm>
 #include <iostream>
  
 int main()
 {
     std::vector<const char*> cats {"Heathcliff", "Snagglepuss", "Hobbes", "Garfield"};
     std::sort(cats.begin(), cats.end(), [](const char *strA, const char *strB) {
         return std::strcmp(strA, strB) < 0;
     });
  
     for (const char *cat : cats) {
         std::cout << cat << '\\n';
     }
 }

.SH Output:

 Garfield
 Heathcliff
 Hobbes
 Snagglepuss

.SH See also

   strncmp compares a certain amount of characters of two strings
           \fI(function)\fP
   memcmp  compares two buffers
           \fI(function)\fP
   strcoll compares two strings in accordance to the current locale
           \fI(function)\fP
   C documentation for
   strcmp
