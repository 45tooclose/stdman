.TH std::promise 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <future>
   template< class T > class promise;     \fB(1)\fP \fI(since C++11)\fP
   template< class T > class promise<T&>; \fB(2)\fP \fI(since C++11)\fP
   template<> class promise<void>;        \fB(3)\fP \fI(since C++11)\fP

   The class template std::promise provides a facility to store a value that is later
   acquired asynchronously via a std::future object, that the std::promise can supply.

    This section is incomplete

.SH Contents

     * 1 Member functions

          * 1.1 Getting the result
          * 1.2 Setting the result

     * 2 Non-member functions
     * 3 Helper classes

.SH Member functions

   constructor                  constructs the promise object
                                \fI(public member function)\fP
   destructor                   destructs the promise object
                                \fI(public member function)\fP
   operator=                    assigns the shared state
                                \fI(public member function)\fP
   swap                         swaps two promise objects
                                \fI(public member function)\fP
.SH Getting the result
   get_future                   returns a future associated with the promised result
                                \fI(public member function)\fP
.SH Setting the result
   set_value                    sets the result to specific value
                                \fI(public member function)\fP
                                sets the result to specific value while delivering the
   set_value_at_thread_exit     notification only at thread exit
                                \fI(public member function)\fP
   set_exception                sets the result to indicate an exception
                                \fI(public member function)\fP
                                sets the result to indicate an exception while
   set_exception_at_thread_exit delivering the notification only at thread exit
                                \fI(public member function)\fP

.SH Non-member functions

   std::swap(std::promise) specializes the std::swap algorithm
   \fI(C++11)\fP                 \fI(function template)\fP

.SH Helper classes

   std::uses_allocator<std::promise> specializes the std::uses_allocator type trait
   \fI(C++11)\fP                           \fI(class template specialization)\fP

.SH Category:

     * Todo without reason
