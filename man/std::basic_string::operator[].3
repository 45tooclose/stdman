.TH std::basic_string::operator[] 3 "Sep  4 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   reference operator[]( size_type pos );             \fB(1)\fP
   const_reference operator[]( size_type pos ) const; \fB(2)\fP

   Returns a reference to the character at specified location pos. No bounds checking
   is performed.

   1) If pos == size(), the behavior is undefined.
   2) If pos == size(), a reference to the character with value CharT()   \fI(until C++11)\fP
   (the null character) is returned.
   If pos == size(), a reference to the character with value CharT() (the
   null character) is returned.
                                                                          \fI(since C++11)\fP
   For the first (non-const) version, the behavior is undefined if this
   character is modified.

.SH Parameters

   pos - position of the character to return

.SH Return value

   Reference to the requested character.

.SH Complexity

   Constant.

.SH Example

   
// Run this code

 #include <iostream>
 #include <string>

 int main()
 {
   {
     std::string const c("Exemplar");
     for (unsigned i = 7;i != 0; i/=2)
         std::cout << c[i];
   }
     std::cout << '\\n';
   {
     std::string s("Exemplar ");
     s[s.size()-1] = 'y';
     std::cout << s;
   }
 }

.SH Output:

 rmx
 Exemplary

.SH See also

   at access specified character with bounds checking
      \fI(public member function)\fP
