.TH std::deque::resize 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   void resize( size_type count, T value = T() );              \fI(until C++11)\fP
   void resize( size_type count );                         \fB(1)\fP \fI(since C++11)\fP
   void resize( size_type count, const value_type& value); \fB(2)\fP \fI(since C++11)\fP

   Resizes the container to contain count elements.

   If the current size is greater than count, the container is reduced to its first
   count elements as if by repeatedly calling pop_back()

   If the current size is less than count, additional elements are        \fI(until C++11)\fP
   appended and initialized with copies of value.
   If the current size is less than count,
                                                                          \fI(since C++11)\fP
   1) additional value-initialized elements are appended
   2) additional copies of value are appended

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Complexity
     * 4 See also

.SH Parameters

   count         -        new size of the container
   value         -        the value to initialize the new elements with
.SH Type requirements
   -
   1) T must meet the requirements of DefaultConstructible and MoveInsertable.
   -
   2) T must meet the requirements of CopyInsertable and MoveInsertable.

.SH Return value

   \fI(none)\fP

.SH Complexity

   Linear in the size of the container

.SH See also

   size returns the number of elements
        \fI(public member function)\fP
