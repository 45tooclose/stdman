.TH std::promise::set_value_at_thread_exit 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   void set_value_at_thread_exit( const R&         (member only of generic promise
   value );                                    \fB(1)\fP template)
                                                   \fI(since C++11)\fP
                                                   (member only of generic promise
   void set_value_at_thread_exit( R&& value ); \fB(2)\fP template)
                                                   \fI(since C++11)\fP
                                                   (member only of promise<R&> template
   void set_value_at_thread_exit( R& value );  \fB(3)\fP specialization)
                                                   \fI(since C++11)\fP
                                                   (member only of promise<void>
   void set_value_at_thread_exit()             \fB(4)\fP template specialization)
                                                   \fI(since C++11)\fP

   Stores the value into the shared state without making the state ready immediately.
   The state is made ready when the current thread exits, after all variables with
   thread-local storage duration have been destroyed.

   The operation is atomic, i.e. it behaves as though they acquire a single mutex
   associated with the promise object while updating the promise object.

   An exception is thrown if there is no shared state or the shared state already
   stores a value or exception.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Exceptions
     * 4 Example
     * 5 See also

.SH Parameters

   value - value to store in the shared state

.SH Return value

   \fI(none)\fP

.SH Exceptions

   std::future_error on the following conditions:

     * *this has no shared state. The error category is set to no_state.

     * The shared state already stores a value or exception. The error category is set
       to promise_already_satisfied.

   Additionally:

   1-2) Any exception thrown by the copy constructor of value
   3) Any exception thrown by the move constructor of value

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   set_value sets the result to specific value
             \fI(public member function)\fP

.SH Category:

     * Todo no example
