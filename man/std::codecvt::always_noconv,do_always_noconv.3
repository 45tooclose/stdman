.TH std::codecvt::always_noconv,do_always_noconv 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <locale>
   public:                        \fB(1)\fP
   bool always_noconv() const;
   protected:                     \fB(2)\fP
   bool do_always_noconv() const;

   1) Public member function, calls the member function do_always_noconv of the most
   derived class.
   2) Returns true if both do_in() and do_out() return std::codecvt_base::noconv for
   all valid inputs.

.SH Contents

     * 1 Return value
     * 2 Notes
     * 3 Exceptions
     * 4 Example

.SH Return value

   true if this conversion facet performs no conversions, false otherwise.

   The non-converting specialization std::codecvt<char, char, std::mbstate_t> returns
   true

.SH Notes

   This function may be used e.g. in the implementation of
   std::basic_filebuf::underflow to use bulk character copy instead of calling
   std::codecvt::in if it is known that the locale imbued in the std::basic_filebuf
   does not perform any conversions.

.SH Exceptions

   \fI(none)\fP                  \fI(until C++11)\fP
   noexcept specification: \fI(since C++11)\fP
   noexcept

.SH Example

   
// Run this code

 #include <locale>
 #include <iostream>

 int main()
 {
     std::cout << "The non-converting char<->char codecvt::always_noconv() returns "
               << std::boolalpha
               << std::use_facet<std::codecvt<char, char, std::mbstate_t>>(
                     std::locale()
                  ).always_noconv() << "\\n"
               << "while wchar_t<->char codecvt::always_noconv() returns "
               << std::use_facet<std::codecvt<wchar_t, char, std::mbstate_t>>(
                     std::locale()
                  ).always_noconv() << "\\n";

 }

.SH Output:

 The non-converting char<->char codecvt::always_noconv() returns true
 while wchar_t<->char codecvt::always_noconv() returns false
