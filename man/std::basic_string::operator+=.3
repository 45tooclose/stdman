.TH std::basic_string::operator+= 3 "Jun 28 2014" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   basic_string& operator+=( const basic_string& str );            \fB(1)\fP
   basic_string& operator+=( CharT ch );                           \fB(2)\fP
   basic_string& operator+=( const CharT* s );                     \fB(3)\fP
   basic_string& operator+=( std::initializer_list<CharT> ilist ); \fB(4)\fP \fI(since C++11)\fP

   Appends addinional characters to the string.

   1) Appends string str

   2) Appends character ch

   3) Appends the null-terminated character string pointed to by s.

   4) Appends characters in the initializer list ilist.

.SH Parameters

   ch   - character value to append
   str  - string to append
   s    - pointer to a null-terminated character string to append
   init - initializer list with the characters to append

.SH Return value

   *this

.SH Complexity

   1) linear in size of str

   2) constant

   3) linear in size of s

   4) linear in size of init

.SH Exceptions

   If an exception is thrown for any reason, this function has no effect (strong
   exception guarantee).
   \fI(since C++11)\fP

   If the operation would result in size() > max_size(), throws std::length_error.

.SH Example

   
// Run this code

 #include <iostream>
 #include <string>
  
 int main()
 {
    std::string str;
    str.reserve(50); //reserves sufficient storage space to avoid memory reallocation
    std::cout << str << '\\n'; //empty string
  
    str += "This";
    std::cout << str << '\\n';
  
    str += std::string(" is ");
    std::cout << str << '\\n';
  
    str += 'a';
    std::cout << str << '\\n';
  
    str += {' ','s','t','r','i','n','g','.'};
    std::cout << str << '\\n';
 }

.SH Output:

 This
 This is
 This is a
 This is a string.

.SH See also

   assign assign characters to a string
          \fI(public member function)\fP 
