.TH std::remquo 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <cmath>
   float remquo( float x, float y, int *quo );                   \fB(1)\fP \fI(since C++11)\fP
   double remquo( double x, double y, int *quo );                \fB(2)\fP \fI(since C++11)\fP
   long double remquo( long double x, long double y, int *quo ); \fB(3)\fP \fI(since C++11)\fP
   Promoted remquo( Arithmetic1 x, Arithmetic2 y, int *quo );    \fB(4)\fP \fI(since C++11)\fP

   Computes the remainder of the floating point division operation x/y as the
   std::remainder() function does. Additionally, the sign and at least the three of the
   last bits of x/y will be stored in quo.

   4) If any argument has integral type, it is cast to double. If any other argument is
   long double, then the return type is long double, otherwise it is double

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Notes
     * 4 See also

.SH Parameters

   x, y - floating point values
   quo  - pointer to an integer value to store some bits of x/y in

.SH Return value

   Remainder of dividing arguments.

.SH Notes

   This function is useful when implementing periodic functions with the period exactly
   representable as a floating-point value: when calculating sin(Ï€x) for a very large
   x, calling std::sin directly may result in a large error, but if the function
   argument is first reduced with std::remquo, the low-order bits of the quotient may
   be used to determine the sign and the remainder may be used to calculate the value
   with high precision.

.SH See also

   remainder signed remainder of the division operation
   \fI(C++11)\fP   \fI(function)\fP
   fmod      remainder of the floating point division operation
             \fI(function)\fP
   div
   ldiv      the quotient and remainder of integer division
   lldiv     \fI(function)\fP
   imaxdiv
   \fI(C++11)\fP
   C documentation for
   remquo
