.TH std::set::count 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   size_type count( const Key& key ) const; \fB(1)\fP
   template< class K >                      \fB(2)\fP \fI(since C++14)\fP
   size_type count( const K& x ) const;

   1) Returns the number of elements with key key, which is either 1 or 0 since this
   container does not allow duplicates
   2) Returns the number of elements with key that compares equivalent to the value x.
   These templates only participate in overload resolution if the type
   Compare::is_transparent exists. They allow calling this function without
   constructing an instance of Key.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Complexity
     * 4 See also

.SH Parameters

   key - key value of the elements to count
   x   - alternative value to compare to the keys

.SH Return value

   Number of elements with key key, that is either 1 or 0

.SH Complexity

   Logarithmic in the size of the container.

.SH See also

   find        finds element with specific key
               \fI(public member function)\fP
   equal_range returns range of elements matching a specific key
               \fI(public member function)\fP
