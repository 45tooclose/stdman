.TH std::function::operator() 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   R operator()( ArgTypes... args ) const;  \fI(since C++11)\fP

   Calls the stored callable function target with the parameters args.

.SH Contents

     • 1 Parameters
     • 2 Return value
     • 3 Exceptions
     • 4 Example
     • 5 See also

.SH Parameters

   args - parameters to pass to the stored callable function target

.SH Return value

   None if R is void. Otherwise the return value of the invocation of the stored
   callable object.

.SH Exceptions

     • std::bad_function_call if *this does not store a callable function target,
       !*this == true.

.SH Example

   The following example shows how std::function can passed to other functions by
   value. Also, it shown how std::function can store lambdas.

   
// Run this code

 #include <iostream>
 #include <functional>

 void call(std::function<int()> f)  // can be passed by value
 {
     std::cout << f() << '\\n';
 }

 int normal_function()
 {
     return 42;
 }

 int main()
 {
     int n = 1;
     std::function<int()> f = [&n](){ return n; };
     call(f);

     n = 2;
     call(f);

     f = normal_function;
     call(f);
 }

.SH Output:

 1
 2
 42

.SH See also

    This section is incomplete

.SH Category:

     • Todo without reason
