.TH std::ceil 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <cmath>
   float ceil( float arg );
   double ceil( double arg );
   long double ceil( long double arg );
   double ceil( Integral arg );          \fI(since C++11)\fP

   Computes nearest integer not less than arg.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Notes
     * 4 Example
     * 5 See also

.SH Parameters

   arg - floating point value

.SH Return value

   Nearest integer not less than arg

.SH Return value
   math-ceil.svg
   Argument

.SH Notes

   If the argument is infinity (positive or negative) or zero (positive or negative),
   the return value is the same as the argument.

   The largest representable floating-point values are exact integers in all standard
   floating-point formats, so this function never overflows.

   This function may, but is not required to, raise FE_INEXACT floating-point
   exceptions for non-integer arguments.

.SH Example

   
// Run this code

 #include <cmath>
 #include <iostream>

 int main()
 {
     std::cout << std::fixed;
     std::cout << std::ceil(12.0) << '\\n';
     std::cout << std::ceil(12.1) << '\\n';
     std::cout << std::ceil(12.5) << '\\n';
     std::cout << std::ceil(12.9) << '\\n';
     std::cout << std::ceil(13.0) << '\\n';
 }

.SH Output:

 12.000000
 13.000000
 13.000000
 13.000000
 13.000000

.SH See also

   floor     nearest integer not greater than the given value
             \fI(function)\fP
   trunc     nearest integer not greater in magnitude than the given value
   \fI(C++11)\fP   \fI(function)\fP
   round
   lround
   llround   nearest integer, rounding away from zero in halfway cases
   \fI(C++11)\fP   \fI(function)\fP
   \fI(C++11)\fP
   \fI(C++11)\fP
   rint
   lrint     nearest integer using current rounding mode with
   llrint    exception if the result differs
   \fI(C++11)\fP   \fI(function)\fP
   \fI(C++11)\fP
   \fI(C++11)\fP
   nearbyint nearest integer using current rounding mode
   \fI(C++11)\fP   \fI(function)\fP
