.TH std::future::wait_until 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   template< class Clock, class Duration >
   std::future_status wait_until( const                                   \fI(since C++11)\fP
   std::chrono::time_point<Clock,Duration>& timeout_time ) const;

   wait_until waits for a result to become available. It blocks until specified
   timeout_time has been reached or the result becomes available, whichever comes
   first. The return value indicates why wait_until returned.

   The clock tied to timeout_time is used, which means that adjustments of the clock
   are taken into account. Thus, the maximum duration of the block might differ from
   timeout_time - Clock::now() at the time of the call, depending on the direction of
   the adjustment.

   The function also may block for longer than until after timeout_time has been
   reached due to scheduling or resource contention delays.

   The behavior is undefined if valid()== false before the call to this function.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Exceptions
     * 4 Notes
     * 5 Example
     * 6 See also

.SH Parameters

   timeout_time - maximum time point to block until

.SH Return value

   Constant                Explanation
   future_status::deferred The function to calculate the result has not been started
                           yet
   future_status::ready    The result is ready
   future_status::timeout  The timeout has expired

.SH Exceptions

   Any exception thrown by clock, time_point, or duration during the execution (clocks,
   time points, and durations provided by the standard library never throw)

.SH Notes

   The implementations are encouraged to detect the case when valid == false before the
   call and throw a future_error with an error condition of future_errc::no_state.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   wait     waits for the result to become available
            \fI(public member function)\fP
            waits for the result, returns if it is not available for the specified
   wait_for timeout duration
            \fI(public member function)\fP

.SH Category:

     * Todo no example
