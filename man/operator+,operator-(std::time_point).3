.TH operator+,operator-(std::time_point) 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   template< class C, class D1, class R2, class
   P2 >
                                                        (since
   time_point<C, typename std::common_type<D1,          C++11)
   duration<R2,P2>>::type>                              (until
   operator+( const time_point<C,D1>& pt,               C++14)

   const duration<R2,P2>& d );
   template< class C, class D1, class R2, class
   P2 >

   constexpr time_point<C, typename                     (since
   std::common_type<D1, duration<R2,P2>>::type>         C++14)
   operator+( const time_point<C,D1>& pt,

   const duration<R2,P2>& d );
   template< class R1, class P1, class C, class
   D2 >
                                                                (since
   time_point<C, typename                                       C++11)
   std::common_type<duration<R1,P1>,D2>::type>                  (until
   operator+( const duration<R1,P1>& d,                         C++14)

   const time_point<C,D2>& pt );
   template< class R1, class P1, class C, class
   D2 >

   constexpr time_point<C, typename                             (since
   std::common_type<duration<R1,P1>,D2>::type>                  C++14)
   operator+( const duration<R1,P1>& d,
                                                \fB(1)\fP
   const time_point<C,D2>& pt );
   template< class C, class D1, class R2, class
   P2 >
                                                                        (since
   time_point<C, typename std::common_type<D1,                          C++11)
   duration<R2,P2>>::type>                                              (until
   operator-( const time_point<C,D1>& d,                                C++14)
                                                    \fB(2)\fP
   const duration<R2,P2>& pt );
   template< class C, class D1, class R2, class
   P2 >

   constexpr time_point<C, typename                                     (since
   std::common_type<D1, duration<R2,P2>>::type>                         C++14)
   operator-( const time_point<C,D1>& d,
                                                        \fB(3)\fP
   const duration<R2,P2>& pt );
   template< class C, class D1, class D2 >
                                                                                (since
   typename std::common_type<D1,D2>::type                                       C++11)
   operator-( const time_point<C,D1>& pt_lhs,                                   (until
                                                                                C++14)
   const time_point<C,D2>& pt_rhs );
   template< class C, class D1, class D2 >                      \fB(4)\fP

   constexpr typename                                                           (since
   std::common_type<D1,D2>::type                                                C++14)
   operator-( const time_point<C,D1>& pt_lhs,

   const time_point<C,D2>& pt_rhs );

   Performs add and subtract operations involving a time_point.

   1-2) Applies the offset d to pt. Effectively pt += dur is performed.
   3) Applies the offset d to pt in negative direction. Effectively pt += (-dur) is
   performed.
   4) Computes the difference between pt_lhs and pt_rhs.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Exceptions
     * 4 See also

.SH Parameters

   pt             - a time point to apply the offset to
   d              - a time offset
   pt_lhs, pt_rhs - time points to extract difference from

.SH Return value

   1-3) The time point that resulted from applying the offset d.
   4) The duration between the time points.

.SH Exceptions

   \fI(none)\fP

.SH See also

   operator+= modifies the time point by the given duration
   operator-= \fI(public member function)\fP
