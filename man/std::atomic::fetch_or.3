.TH std::atomic::fetch_or 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   T fetch_or( T arg,
                memory_order =                        \fI(since C++11)\fP
   std::memory_order_seq_cst );                       (member only of atomic<Integral>
   T fetch_or( T arg,                                 template specialization)
                memory_order =
   std::memory_order_seq_cst ) volatile;

   Atomically replaces the current value with the result of bitwise OR of the value and
   arg. The operation is read-modify-write operation. Memory is affected according to
   the value of memory_order.

.SH Contents

     • 1 Parameters
     • 2 Return value
     • 3 Exceptions
     • 4 See also

.SH Parameters

   arg          - the other argument of bitwise OR
   memory_order - memory order constraints to enforce

.SH Return value

   The value of the atomic variable before the call.

.SH Exceptions

   noexcept specification:  
   noexcept
     

.SH See also

   atomic_fetch_or          replaces the atomic object with the result of logical OR
   atomic_fetch_or_explicit with a non-atomic argument and obtains the previous value
   \fI(C++11)\fP                  of the atomic
   \fI(C++11)\fP                  \fI(function template)\fP
