.TH std::multiset::lower_bound 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   iterator lower_bound( const Key& key );             \fB(1)\fP
   const_iterator lower_bound( const Key& key ) const; \fB(1)\fP
   template< class K >                                 \fB(2)\fP \fI(since C++14)\fP
   iterator lower_bound(const K& x);
   template< class K >                                 \fB(2)\fP \fI(since C++14)\fP
   const_iterator lower_bound(const K& x) const;

   1) Returns an iterator pointing to the first element that is not less than key.
   2) Returns an iterator pointing to the first element that compares not less to the
   value x. These templates only participate in overload resolution if the type
   Compare::is_transparent exists. They allow calling this function without
   constructing an instance of Key.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Complexity
     * 4 See also

.SH Parameters

   key - key value to compare the elements to
   x   - alternative value that can be compared to Key

.SH Return value

   Iterator pointing to the first element that is not less than key. If no such element
   is found, a past-the-end iterator (see end()) is returned.

.SH Complexity

   Logarithmic in the size of the container.

.SH See also

   equal_range returns range of elements matching a specific key
               \fI(public member function)\fP
   upper_bound returns an iterator to the first element greater than a certain value
               \fI(public member function)\fP
