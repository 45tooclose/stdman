.TH std::map::begin,std::map::cbegin 3 "2017.04.02" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::map::begin,std::map::cbegin \- std::map::begin,std::map::cbegin

.SH Synopsis
   iterator begin();
   const_iterator begin() const;
   const_iterator cbegin() const;  \fI(since C++11)\fP

   Returns an iterator to the first element of the container.

   If the container is empty, the returned iterator will be equal to end().

   range-begin-end.svg

.SH Parameters

   \fI(none)\fP

.SH Return value

   Iterator to the first element

.SH Exceptions

   \fI(none)\fP                    \fI(until C++11)\fP
   noexcept specification:  
   noexcept                  \fI(since C++11)\fP
     

.SH Complexity

   Constant

.SH Example

   
// Run this code

 #include <iostream>
 #include <map>
  
 int main() {
   std::map<int, float> num_map;
   num_map[4] = 4.13;
   num_map[9] = 9.24;
   num_map[1] = 1.09;
   for (auto it = num_map.begin(); it != num_map.end(); ++it) { // calls a_map.begin() and a_map.end()
     std::cout << it->first << ", " << it->second << '\\n';
   }
 }

.SH Output:

 1, 1.09
 4, 4.13
 9, 9.24

.SH See also

   end  returns an iterator to the end
   cend \fI(public member function)\fP 

.SH Category:

     * unconditionally noexcept
