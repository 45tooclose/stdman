.TH std::variant::swap 3 "Nov 16 2016" "2.1 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::variant::swap \- std::variant::swap

.SH Synopsis
   void swap(variant& rhs) \fB(1)\fP \fI(since C++17)\fP

   Swaps two variant objects

     * if both *this and rhs are valueless by exception, does nothing
     * otherwise, if both *this and rhs hold the same alternative, calls
       swap(std::get<i>(*this), std:get<i>(rhs)) where i is index(). If an exception is
       thrown, the state of the values depends on the exception safety of the swap
       function called.
     * otherwise, exchanges values of rhs and *this. If an exception is thrown, the
       state of *this and rhs depends on exception safety of variant's move constructor
       and move assignment operators.

   This overload only participates in overload resolution if std::is_swappable_v<T_i>
   is true for all T_i in Types...

.SH Parameters

   rhs - a variant object to swap with

.SH Return value

   \fI(none)\fP

.SH Exceptions

   May throw any exception thrown by swap(get<i>(*this), get<i>(rhs)) with i being
   index() and variant's move constructor and move assignment operator.

   noexcept specification:
   noexcept((std::is_nothrow_move_constructible_v<Types> &&
   std::is_nothrow_swappable_v<Types>) && ...))

.SH Example

    This section is incomplete
    Reason: no example

   Categories:

     * conditionally noexcept
     * Todo no example
