.TH operator==,!=,<,<=,>,>=(std::pair) 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <utility>
   template< class T1, class T2 >                                     \fB(1)\fP \fI(until C++14)\fP
   bool operator==( const pair<T1,T2>& lhs, const pair<T1,T2>& rhs );
   template< class T1, class T2 >
   constexpr bool operator==( const pair<T1,T2>& lhs, const           \fB(1)\fP \fI(since C++14)\fP
   pair<T1,T2>& rhs );
   template< class T1, class T2 >                                     \fB(2)\fP \fI(until C++14)\fP
   bool operator!=( const pair<T1,T2>& lhs, const pair<T1,T2>& rhs );
   template< class T1, class T2 >
   constexpr bool operator!=( const pair<T1,T2>& lhs, const           \fB(2)\fP \fI(since C++14)\fP
   pair<T1,T2>& rhs );
   template< class T1, class T2 >                                     \fB(3)\fP \fI(until C++14)\fP
   bool operator<( const pair<T1,T2>& lhs, const pair<T1,T2>& rhs );
   template< class T1, class T2 >
   constexpr bool operator<( const pair<T1,T2>& lhs, const            \fB(3)\fP \fI(since C++14)\fP
   pair<T1,T2>& rhs );
   template< class T1, class T2 >                                     \fB(4)\fP \fI(until C++14)\fP
   bool operator<=( const pair<T1,T2>& lhs, const pair<T1,T2>& rhs );
   template< class T1, class T2 >
   constexpr bool operator<=( const pair<T1,T2>& lhs, const           \fB(4)\fP \fI(since C++14)\fP
   pair<T1,T2>& rhs );
   template< class T1, class T2 >                                     \fB(5)\fP \fI(until C++14)\fP
   bool operator>( const pair<T1,T2>& lhs, const pair<T1,T2>& rhs );
   template< class T1, class T2 >
   constexpr bool operator>( const pair<T1,T2>& lhs, const            \fB(5)\fP \fI(since C++14)\fP
   pair<T1,T2>& rhs );
   template< class T1, class T2 >                                     \fB(6)\fP \fI(until C++14)\fP
   bool operator>=( const pair<T1,T2>& lhs, const pair<T1,T2>& rhs );
   template< class T1, class T2 >
   constexpr bool operator>=( const pair<T1,T2>& lhs, const           \fB(6)\fP \fI(since C++14)\fP
   pair<T1,T2>& rhs );

   1-2) Tests if both elements of lhs and rhs are equal, that is, compares lhs.first
   with rhs.first and lhs.second with rhs.second
   3-6) Compares lhs and rhs lexicographically, that is, compares the first elements
   and only if they are equivalent, compares the second elements.

.SH Parameters

   lhs, rhs - pairs to compare

.SH Return value

   1) true if both lhs.first == rhs.first and lhs.second == rhs.second, otherwise false

   2) true if either lhs.first != rhs.first or lhs.second != rhs.second, otherwise
   false

   3) If lhs.first<rhs.first, returns true. Otherwise, if rhs.first<lhs.first, returns
   false. Otherwise, if lhs.second<rhs.second, returns true. Otherwise, returns false.

   4) !(rhs < lhs)

   5) rhs < lhs

   6) !(lhs < rhs)

.SH Example

   Because operator< is defined for pairs, containers of pairs can be sorted.

   
// Run this code

 #include <iostream>
 #include <utility>
 #include <vector>
 #include <algorithm>
  
 int main()
 {
     std::vector<std::pair<int, std::string>> v = { {2, "baz"},
                                                    {2, "bar"},
                                                    {1, "foo"} };
     std::sort(v.begin(), v.end());
  
     for(auto p: v) {
         std::cout << "(" << p.first << "," << p.second << ")\\n";
     }
 }

.SH Output:

 (1,foo)
 (2,bar)
 (2,baz)
