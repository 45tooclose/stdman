.TH std::experimental::filesystem::is_character_file 3 "Nov 25 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::filesystem::is_character_file \- std::experimental::filesystem::is_character_file

.SH Synopsis
   Defined in header <experimental/filesystem>
   bool is_character_file( file_status s );                 \fB(1)\fP (filesystem TS)
   bool is_character_file( const path& p );                 \fB(2)\fP (filesystem TS)
   bool is_character_file( const path& p, error_code& ec ); \fB(3)\fP (filesystem TS)

   Checks if the given file status or path corresponds to a character special file.

   1) Equivalent to s.type() == file_type::character.
   2) Equivalent to is_character_file(status(p)).
   3) Equivalent to is_character_file(status(p, ec)). Returns false and sets ec to an
   appropriate error code if an error occurs. Otherwise, ec is cleared with a call to
   ec.clear().

.SH Parameters

   s  - file status to check
   p  - path to examine
   ec - error code to store the error status to

.SH Return value

   true if the given path or file status corresponds to a character special file, false
   otherwise.

.SH Exceptions

   1,3)
   noexcept specification:  
   noexcept
     
   2) filesystem_error if an error occurs. The exception object is constructed with p
   as an argument. The error code is set to an appropriate error code for the error
   that caused the failure.

.SH See also

    This section is incomplete

.SH Category:

     * Todo without reason
