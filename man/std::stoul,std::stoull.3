.TH std::stoul,std::stoull 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <string>
   unsigned long stoul( const std::string& str, size_t *pos = 0, int  \fB(1)\fP \fI(since C++11)\fP
   base = 10 );
   unsigned long long stoull( const std::string& str, size_t *pos =   \fB(2)\fP \fI(since C++11)\fP
   0, int base = 10 );

   Interprets an unsigned integer value in the string str.

   1) calls std::strtoul(str.c_str(), pos, base)
   2) calls std::strtoull(str.c_str(), pos, base)

   Function discards any whitespace characters (as identified by calling isspace())
   until first non-whitespace character is found. Then it takes as many characters as
   possible to form a valid base-n (where n=base) unsigned integer number
   representation and converts them to an integer value. The valid unsigned integer
   value consists of the following parts:

     • (optional) prefix \fB(0)\fP indicating octal base (applies only when the base is 8 or
       0)
     • (optional) prefix (0x or 0X) indicating hexadecimal base (applies only when the
       base is 16 or 0)
     • a sequence of digits

   The set of valid digits for base-2 integer is 01, for base-3 integer is 012, and so
   on. For bases larger than 10, valid digits include alphabetic characters, starting
   from Aa for base-11 integer, to Zz for base-36 integer. The case of the characters
   is ignored. In non-default locales, additional numeric formats may be accepted.

   If the value of base is 0, the numeric base is auto-detected: if the prefix is 0,
   the base is octal, if the prefix is 0x or 0X, the base is hexadecimal, otherwise the
   base is decimal.

   The index of the first unconverted character is stored in pos. If NULL is passed as
   pos, it is ignored.

.SH Contents

     • 1 Parameters
     • 2 Return value
     • 3 Exceptions
     • 4 See also

.SH Parameters

   str  - the string to convert
   pos  - address of an integer to store the index of the first unconverted character
   base - the number base

.SH Return value

   The string converted to the specified unsigned integer type.

.SH Exceptions

     • std::invalid_argument if no conversion could be performed
     • std::out_of_range if the converted value would fall out of the range of the
       result type.

.SH See also

   stoi
   stol
   stoll   converts a string to a signed integer
   \fI(C++11)\fP \fI(function)\fP
   \fI(C++11)\fP
   \fI(C++11)\fP
   stof
   stod
   stold   converts a string to a floating point value
   \fI(C++11)\fP \fI(function)\fP
   \fI(C++11)\fP
   \fI(C++11)\fP
