.TH std::basic_ostream::write 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   basic_ostream& write( const char_type* s, std::streamsize count );

   Behaves as an UnformattedOutputFunction. After constructing and checking the sentry
   object, outputs the characters from successive locations in the character array
   whose first element is pointed to by s. Characters are inserted into the output
   sequence until one of the following occurs:

     * exactly count characters are inserted
     * inserting into the output sequence fails (in which case setstate(badbit) is
       called)

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Notes
     * 4 Exceptions
     * 5 Example
     * 6 See also

.SH Parameters

   s     - pointer to the character string to write
   count - number of characters to write

.SH Return value

   *this

.SH Notes

   This function is not overloaded for the types signed char or unsigned char, unlike
   the formatted operator<<

   Also, unlike the formatted output functions, this function does not set the failbit
   on failure.

.SH Exceptions

   If an exception occurs during output and exceptions() & badbit != 0, rethrows that
   exception.

   If output fails and exceptions() & badbit != 0, throws ios_base::failure.

.SH Example

   This function may be used to output object representations, i.e. binary output

   
// Run this code

 #include <iostream>

 int main()
 {
     int n = 0x41424344;
     std::cout.write(reinterpret_cast<char*>(&n), sizeof n) << '\\n';
 }

.SH Output:

 DCBA

.SH See also

   operator<<(std::basic_ostream) inserts character data
                                  \fI(function)\fP
   put                            inserts a character
                                  \fI(public member function)\fP
