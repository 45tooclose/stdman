.TH std::basic_filebuf::overflow 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   protected:
   virtual int_type overflow ( int_type c = Traits::eof() );

   Writes some data from the put area to the associated character sequence (to the
   file).

   Behaves like the base class std::basic_streambuf::overflow, except that to write the
   data, first uses codecvt::out() of the imbued locale to convert the characters into
   external (possibly multibyte) representation, stored in a temporary buffer
   (allocated as large as necessary), then uses file I/O to copy all fully-converted
   bytes into the file.

   If the conversion fails with std::codecvt_base::error, returns Traits::eof() without
   attempting any output.

   If the associated file is not open (is_open() == false), returns Traits::eof()
   before doing anything.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Example
     * 4 See also

.SH Parameters

   \fI(none)\fP

.SH Return value

   Traits::not_eof(c) to indicate success or Traits::eof() to indicate failure.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   overflow  writes characters to the associated output sequence from the put area
   \fB[virtual]\fP \fI(virtual protected member function of std::basic_streambuf)\fP
   underflow reads from the associated file
   \fB[virtual]\fP \fI(virtual protected member function)\fP

.SH Category:

     * Todo no example
