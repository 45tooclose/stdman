.TH std::unordered_multimap::find 3 "Jun 28 2014" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   iterator find( const Key& key );             \fB(1)\fP
   const_iterator find( const Key& key ) const; \fB(2)\fP

   1,2) Finds an element with key equivalent to key.

.SH Parameters

   key - key value of the element to search for

.SH Return value

   Iterator to an element with key equivalent to key. If no such element is found,
   past-the-end (see end()) iterator is returned.

.SH Complexity

   Constant on average, worst case linear in the size of the container.

.SH Example

   
// Run this code

 #include <iostream>
 #include <map>
 #include <unordered_map>
  
 int main()
 {
     std::unordered_multimap<int,char> map_ex;
     map_ex.insert({{1,'a'},{2,'b'}});
     std::unordered_multimap<int,char>::const_iterator search = map_ex.find(1);
     if(search != map_ex.end()) {
         std::cout << "Found " << search->first << " " << search->second << "\\n";
     }
     else {
         std::cout << "Not found" << std::endl;
     }
     return 0;
 }

.SH Output:

 Found 1 a

.SH See also

   count       returns the number of elements matching specific key
               \fI(public member function)\fP 
   equal_range returns range of elements matching a specific key
               \fI(public member function)\fP 
