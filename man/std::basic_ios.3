.TH std::basic_ios 3 "Nov 25 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_ios \- std::basic_ios

.SH Synopsis
   Defined in header <ios>
   template<

       class CharT,
       class Traits = std::char_traits<CharT>

   > class basic_ios : public ios_base

   The class std::basic_ios provides facilities for interfacing with objects that have
   std::basic_streambuf interface. Several std::basic_ios objects can refer to one
   actual std::basic_streambuf object. Character type dependent formatting flags and
   error state is stored in std::basic_ios class.

   std-basic ios-inheritance.svg
   About this image

                                   Inheritance diagram

   Two specializations for common character types are also provided:

   Type Definition
   ios  basic_ios<char>
   wios basic_ios<wchar_t>

.SH Member types

   Member type Definition
   char_type   CharT
   traits_type Traits
   int_type    Traits::int_type
   pos_type    Traits::pos_type
   off_type    Traits::off_type

.SH Public member functions

   constructor    constructs the object
                  \fI(public member function)\fP 
   destructor     destructs the object
   \fB[virtual]\fP      \fI(virtual public member function)\fP 
   operator=      the copy assignment operator is deleted
                  \fI(public member function)\fP
.SH State functions
   good           checks if no error has occurred i.e. I/O operations are available
                  \fI(public member function)\fP 
   eof            checks if end-of-file has been reached
                  \fI(public member function)\fP 
   fail           checks if a recoverable error has occurred
                  \fI(public member function)\fP 
   bad            checks if a non-recoverable error has occurred
                  \fI(public member function)\fP 
   operator!      checks if an error has occurred (synonym of fail()
                  \fI(public member function)\fP 
   operator void*
   operator bool  checks if no error has occurred (synonym of !fail())
   \fI(until C++11)\fP  \fI(public member function)\fP 
   \fI(since C++11)\fP
   rdstate        returns state flags
                  \fI(public member function)\fP 
   setstate       sets state flags
                  \fI(public member function)\fP 
   clear          clears error and eof flags
                  \fI(public member function)\fP 
.SH Formatting
   copyfmt        copies formatting information
                  \fI(public member function)\fP 
   fill           manages the fill character
                  \fI(public member function)\fP 
.SH Miscellaneous
   exceptions     manages exception mask
                  \fI(public member function)\fP 
   imbue          sets the locale
                  \fI(public member function)\fP 
   rdbuf          manages associated stream buffer
                  \fI(public member function)\fP 
   tie            manages tied stream
                  \fI(public member function)\fP 
   narrow         narrows characters
                  \fI(public member function)\fP 
   widen          widens characters
                  \fI(public member function)\fP 

.SH Protected member functions

   init      initializes a default-constructed std::basic_ios
             \fI(protected member function)\fP 
   move      moves from another std::basic_ios except for rdbuf
             \fI(protected member function)\fP 
   swap      swaps with another std::basic_ios except for rdbuf
             \fI(protected member function)\fP 
   set_rdbuf replaces the rdbuf without clearing its error state
             \fI(protected member function)\fP 

Inherited from std::ios_base

.SH Member functions

.SH Formatting
   flags             manages format flags
                     \fI(public member function of std::ios_base)\fP 
   setf              sets specific format flag
                     \fI(public member function of std::ios_base)\fP 
   unsetf            clears specific format flag
                     \fI(public member function of std::ios_base)\fP 
   precision         manages decimal precision of floating point operations
                     \fI(public member function of std::ios_base)\fP 
   width             manages field width
                     \fI(public member function of std::ios_base)\fP 
.SH Locales
   imbue             sets locale
                     \fI(public member function of std::ios_base)\fP 
   getloc            returns current locale
                     \fI(public member function of std::ios_base)\fP 
.SH Internal extensible array
   xalloc            returns a program-wide unique integer that is safe to use as index
   \fB[static]\fP          to pword() and iword()
                     \fI(public static member function of std::ios_base)\fP 
                     resizes the private storage if necessary and access to the long
   iword             element at the given index
                     \fI(public member function of std::ios_base)\fP 
                     resizes the private storage if necessary and access to the void*
   pword             element at the given index
                     \fI(public member function of std::ios_base)\fP 
.SH Miscellaneous
   register_callback registers event callback function
                     \fI(public member function of std::ios_base)\fP 
   sync_with_stdio   sets whether C++ and C IO libraries are interoperable
   \fB[static]\fP          \fI(public static member function of std::ios_base)\fP 
.SH Member classes
   failure           stream exception
                     \fI(public member class of std::ios_base)\fP 
   Init              initializes standard stream objects
                     \fI(public member class of std::ios_base)\fP 

.SH Member types and constants
   Type           Explanation
                  stream open mode type

                  The following constants are also defined:

                  Constant Explanation
                  app      seek to the end of stream before each write
   openmode       binary   open in binary mode
                  in       open for reading
                  out      open for writing
                  trunc    discard the contents of the stream when opening
                  ate      seek to the end of stream immediately after open

                  \fI(typedef)\fP 
                  formatting flags type

                  The following constants are also defined:

                  Constant    Explanation
                  dec         use decimal base for integer I/O
                  oct         use octal base for integer I/O
                  hex         use hexadecimal base for integer I/O
                  basefield   dec|oct|hex|0. Useful for masking operations
                  left        left adjustment (adds fill characters to the right)
                              
                  right       right adjustment (adds fill characters to the left)
                              
                  internal    internal adjustment (adds fill characters to the internal
                              designated point) 
                  adjustfield left|right|internal. Useful for masking operations 
                  scientific  generate floating point types using scientific notation,
                              or hex notation if combined with fixed 
   fmtflags       fixed       generate floating point types using fixed notation, or
                              hex notation if combined with scientific 
                  floatfield  scientific|fixed|(scientific|fixed)|0. Useful for masking
                              operations 
                  boolalpha   insert and extract bool type in alphanumeric format
                              
                              generate a prefix indicating the numeric base for integer
                  showbase    output, require the currency indicator in monetary I/O
                              
                  showpoint   generate a decimal-point character unconditionally for
                              floating-point number output 
                  showpos     generate a + character for non-negative numeric output
                              
                  skipws      skip leading whitespace before certain input operations
                              
                  unitbuf     flush the output after each output operation 
                  uppercase   replace certain lowercase letters with their uppercase
                              equivalents in certain output output operations 

                  \fI(typedef)\fP 
                  state of the stream type

                  The following constants are also defined:

                  Constant Explanation
   iostate        goodbit  no error 
                  badbit   irrecoverable stream error 
                  failbit  input/output operation failed (formatting or extraction
                           error) 
                  eofbit   associated input sequence has reached end-of-file 

                  \fI(typedef)\fP 
                  seeking direction type

                  The following constants are also defined:

   seekdir        Constant Explanation
                  beg      the beginning of a stream 
                  end      the ending of a stream 
                  cur      the current position of stream position indicator 

                  \fI(typedef)\fP 
   event          specifies event type
                  \fI(enum)\fP 
   event_callback callback function type
                  \fI(typedef)\fP 
