.TH std::lock_guard::lock_guard 3 "Jun 28 2014" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   explicit lock_guard( mutex_type& m );             \fB(1)\fP \fI(since C++11)\fP
   lock_guard( mutex_type& m, std::adopt_lock_t t ); \fB(2)\fP \fI(since C++11)\fP
   lock_guard( const lock_guard& ) = delete;         \fB(3)\fP \fI(since C++11)\fP

   Acquires ownership of the given mutex m.

   1) If m is not a recursive mutex, requires that the current thread does not own m.
   Effectively calls m.lock().

   2) Requires that the current thread owns m.

   3) Copy constructor is deleted.

   The behavior is undefined if m is destroyed before the lock_guard object is.

.SH Parameters

   m - mutex to acquire ownership of
   t - tag parameter used to select non-locking version of the constructor
