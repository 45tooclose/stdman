.TH std::vector<bool>::reference 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   class reference;

   The std::vector<bool> specialization defines std::vector<bool>::reference as a
   publicly-accessible nested class. std::vector<bool>::reference proxies the behavior
   of references to a single bit in std::vector<bool>.

   The primary use of std::vector<bool>::reference is to provide an l-value that can be
   returned from operator[].

   Any reads or writes to a vector that happen via a std::vector<bool>::reference
   potentially read or write to the entire underlying vector.

.SH Contents

     • 1 Member functions
     • 2
       std::vector<bool>::~reference
     • 3
       std::vector<bool>::reference::operator=

          • 3.1 Parameters
          • 3.2 Return value
          • 3.3 Exceptions

     • 4
       std::vector<bool>::reference::operator bool

          • 4.1 Parameters
          • 4.2 Return value
          • 4.3 Exceptions

     • 5
       std::vector<bool>::reference::operator~

          • 5.1 Parameters
          • 5.2 Return value
          • 5.3 Exceptions

     • 6
       std::vector<bool>::reference::flip

          • 6.1 Parameters
          • 6.2 Return value
          • 6.3 Exceptions
          • 6.4 See also

.SH Member functions

   constructor   constructs the reference. Accessible only to std::vector<bool> itself
                 \fI(public member function)\fP
   destructor    ~reference
                 \fI(public member function)\fP
   operator=     assigns a bool to the referenced bit
                 \fI(public member function)\fP
   operator bool returns the referenced bit
                 \fI(public member function)\fP
   operator ~    returns inverted referenced bit
                 \fI(public member function)\fP
   flip          flips the referenced bit
                 \fI(public member function)\fP

                              std::vector<bool>::~reference

   ~reference()

   Destroys the reference.

                         std::vector<bool>::reference::operator=

   reference& operator=( bool x );
   reference& operator=( const reference& x );

   Assigns a value to the referenced bit.

.SH Parameters

   x - value to assign

.SH Return value

   *this

.SH Exceptions

   \fI(none)\fP                  \fI(until C++11)\fP
   noexcept specification: \fI(since C++11)\fP
   noexcept

                       std::vector<bool>::reference::operator bool

   operator bool() const;

   Returns the value of the referenced bit.

.SH Parameters

   \fI(none)\fP

.SH Return value

   The referenced bit.

.SH Exceptions

   \fI(none)\fP                  \fI(until C++11)\fP
   noexcept specification: \fI(since C++11)\fP
   noexcept

                         std::vector<bool>::reference::operator~

   bool operator~() const;

   Returns the inverse of the referenced bit.

.SH Parameters

   \fI(none)\fP

.SH Return value

   The inverse of the referenced bit.

.SH Exceptions

   \fI(none)\fP                  \fI(until C++11)\fP
   noexcept specification: \fI(since C++11)\fP
   noexcept

                            std::vector<bool>::reference::flip

   reference& flip();

   Inverts the referenced bit.

.SH Parameters

   \fI(none)\fP

.SH Return value

   *this

.SH Exceptions

   \fI(none)\fP                  \fI(until C++11)\fP
   noexcept specification: \fI(since C++11)\fP
   noexcept

.SH See also

   operator[] access specified element
              \fI(public member function of std::vector)\fP
