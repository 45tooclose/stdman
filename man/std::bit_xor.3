.TH std::bit_xor 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <functional>
   template< class T >             \fI(until C++14)\fP
   struct bit_xor;
   template< class T = void >      \fI(since C++14)\fP
   struct bit_xor;

   Function object for performing bitwise XOR. Effectively calls operator^ on type T.

.SH Contents

     • 1 Specializations
     • 2 Member types
     • 3 Member functions
     • 4
       std::bit_xor::operator()

          • 4.1 Parameters
          • 4.2 Return value
          • 4.3 Exceptions
          • 4.4 Possible implementation

.SH Specializations

   The standard library provides a specialization of std::bit_xor when T
   is not specified, which leaves the parameter types and return type to
   be deduced.
                                                                          \fI(since C++14)\fP
                 function object implementing x ^ y deducing argument and
   bit_xor<void> return types
                 \fI(class template specialization)\fP

.SH Member types

   Type                 Definition
   result_type          T
   first_argument_type  T
   second_argument_type T

.SH Member functions

   operator() returns the result of bitwise XOR of two arguments
              \fI(public member function)\fP

                                 std::bit_xor::operator()

   T operator()( const T& lhs, const T& rhs ) const;            \fI(until C++14)\fP
   constexpr T operator()( const T& lhs, const T& rhs ) const;  \fI(since C++14)\fP

   Returns the result of bitwise XOR of lhs and rhs.

.SH Parameters

   lhs, rhs - values to compute bitwise XOR of

.SH Return value

   The result of lhs ^ rhs.

.SH Exceptions

   \fI(none)\fP

.SH Possible implementation

   constexpr T operator()(const T &lhs, const T &rhs) const
   {
       return lhs ^ rhs;
   }
