.TH operator==,!=(std::complex) 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <complex>
   template< class T >                                                \fB(1)\fP \fI(until C++14)\fP
   bool operator==( const complex<T>& lhs, const complex<T>& rhs);
   template< class T >
   constexpr bool operator==( const complex<T>& lhs, const            \fB(1)\fP \fI(since C++14)\fP
   complex<T>& rhs);
   template< class T >                                                \fB(2)\fP \fI(until C++14)\fP
   bool operator==( const complex<T>& lhs, const T& rhs);
   template< class T >                                                \fB(2)\fP \fI(since C++14)\fP
   constexpr bool operator==( const complex<T>& lhs, const T& rhs);
   template< class T >                                                \fB(3)\fP \fI(until C++14)\fP
   bool operator==( const T& lhs, const complex<T>& rhs);
   template< class T >                                                \fB(3)\fP \fI(since C++14)\fP
   constexpr bool operator==( const T& lhs, const complex<T>& rhs);
   template< class T >                                                \fB(4)\fP \fI(until C++14)\fP
   bool operator!=( const complex<T>& lhs, const complex<T>& rhs);
   template< class T >
   constexpr bool operator!=( const complex<T>& lhs, const            \fB(4)\fP \fI(since C++14)\fP
   complex<T>& rhs);
   template< class T >                                                \fB(5)\fP \fI(until C++14)\fP
   bool operator!=( const complex<T>& lhs, const T& rhs);
   template< class T >                                                \fB(5)\fP \fI(since C++14)\fP
   constexpr bool operator!=( const complex<T>& lhs, const T& rhs);
   template< class T >                                                \fB(6)\fP \fI(until C++14)\fP
   bool operator!=( const T& lhs, const complex<T>& rhs);
   template< class T >                                                \fB(6)\fP \fI(since C++14)\fP
   constexpr bool operator!=( const T& lhs, const complex<T>& rhs);

   Compares two complex numbers. Scalar arguments are treated as complex numbers with
   the real part equal to the argument and the imaginary part set to zero.

   1-3) Compares lhs and rhs for equality.
   4-6) Compares lhs and rhs for inequality.

.SH Parameters

   lhs, rhs - the arguments to compare: either both complex numbers or one complex and
              one scalar of matching type (float, double, long double)

.SH Return value

   1-3) true if respective parts of lhs are equal to rhs, false otherwise.
   4-6) !(lhs == rhs)

.SH Example

    This section is incomplete
    Reason: no example

.SH Category:

     * Todo no example
