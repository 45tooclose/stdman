.TH std::atan2 3 "Nov 25 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::atan2 \- std::atan2

.SH Synopsis
   Defined in header <cmath>
   float       atan2( float y, float x );             \fB(1)\fP
   double      atan2( double y, double x );           \fB(2)\fP
   long double atan2( long double y, long double x ); \fB(3)\fP
   Promoted    atan2( Arithmetic1 y, Arithmetic2 x ); \fB(4)\fP \fI(since C++11)\fP

   Computes the inverse tangent of y/x using the signs of arguments to correctly
   determine quadrant.

   4) If any argument has integral type, it is cast to double. If any other argument is
   long double, then the return type is long double, otherwise it is double.

.SH Parameters

   x, y - values of floating-point or integral types

.SH Return value

   Arc tangent of y/x in radians in the range of [-π; π] radians.

   Y argument
.SH Return value
   math-atan2.png
   X argument

   std::atan2(+0, -0) return +π. std::atan2(-0, -0) return -π

   std::atan2(+0, +0) return +0. std::atan2(-0, +0) return -0

   std::atan2(+0, x) return +π if x<0 and +0 if x>0.

   std::atan2(-0, x) return -π if x<0 and -0 if x>0.

   std::atan2(y, 0) return -π/2 if y<0 and +π/2 if y>0.

   std::atan2(y, -∞) returns +π if y>0 and -π if y<0

   std::atan2(y, +∞) returns +0 if y>0 and -0 if y<0

   std::atan2(+∞, x) returns +π/2. std::atan2(-∞, x) returns -π/2.

   std::atan2(+∞, -∞) returns +3π/4. std::atan2(-∞, -∞) returns -3π/4.

   std::atan2(+∞, +∞) returns +π/4. std::atan2(-∞, +∞) returns -π/4.

.SH Example

   
// Run this code

 #include <cmath>
 #include <utility>
 #include <iostream>
  
 std::pair<double, double> cartesian_to_polar(double x, double y)
 {
     return {std::hypot(x, y), std::atan2(y,x)};
 }
  
 int main()
 {
     std::pair<double, double> polar = cartesian_to_polar(1, 1);
     std::cout << "(1,1) cartesian is (" << polar.first
                << "," << polar.second<< ") polar\\n";
 }

.SH Output:

 (1,1) cartesian is (1.41421,0.785398) polar

.SH See also

   atan computes arc tangent (arctan(x))
        \fI(function)\fP 
   asin computes arc sine (arcsin(x))
        \fI(function)\fP 
   acos computes arc cosine (arccos(x))
        \fI(function)\fP 
   tan  computes tangent (tan(x))
        \fI(function)\fP 
   C documentation for
   atan2
