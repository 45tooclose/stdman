.TH std::deque::shrink_to_fit 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   void shrink_to_fit();  \fI(since C++11)\fP

   Requests the removal of unused capacity.

   It is a non-binding request to reduce capacity to size(). It depends on the
   implementation if the request is fulfilled.

   All iterators and references are potentially invalidated. Past-the-end iterator is
   also potentially invalidated.

.SH Contents

     • 1 Parameters
     • 2 Return value
     • 3 Complexity
     • 4 Example
     • 5 See also

.SH Parameters

   \fI(none)\fP

.SH Type requirements
   -
   T must meet the requirements of MoveInsertable.

.SH Return value

   \fI(none)\fP

.SH Complexity

   Linear in the size of the container.

.SH Example

   
// Run this code

 #include <deque>
  
 int main() {
     std::deque<int> nums(1000, 42);
     nums.push_front(1);
     nums.pop_front();
  
     nums.clear();
  
     // nums now contains no items, but it may still be holding allocated memory.
     // Calling shrink_to_fit will free any unused memory.
     nums.shrink_to_fit();
 }

.SH See also

   size returns the number of elements
        \fI(public member function)\fP
