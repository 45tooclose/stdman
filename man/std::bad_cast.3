.TH std::bad_cast 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <typeinfo>
   class bad_cast : public std::exception;

   An exception of this type is thrown when a dynamic_cast to a reference type fails
   the run-time check (e.g. because the types are not related by inheritance).

   std-bad cast-inheritance.svg
   About this image

                                   Inheritance diagram

.SH Contents

     * 1 Member functions
     * 2 Inherited from
       std::exception

          * 2.1 Member functions
          * 2.2 Example

.SH Member functions

   constructor   constructs a new bad_cast object
                 \fI(public member function)\fP

Inherited from std::exception

.SH Member functions

   destructor   destructs the exception object
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP
   what         returns an explanatory string
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP

.SH Example

   
// Run this code

 #include <iostream>
 #include <typeinfo>

 struct Foo { virtual ~Foo() {} };
 struct Bar { virtual ~Bar() {} };

 int main()
 {
     Bar b;
     try {
         Foo& f = dynamic_cast<Foo&>(b);
     } catch(const std::bad_cast& e)
     {
         std::cout << e.what() << '\\n';
     }
 }

.SH Output:

 Bad dynamic_cast!
