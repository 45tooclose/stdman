.TH std::ostrstream::str 3 "Sep  4 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   char* str();

   Returns the pointer to the beginning of the buffer, after freezing it. Effectively
   calls rdbuf()->str()

.SH Notes

   After a call to str(), dynamic streams become frozen. A call to freeze(false) is
   required before exiting the scope in which this ostrstream object was created.
   otherwise the destructor will leak memory. Also, additional output to a frozen
   stream may be truncated once it reaches the end of the allocated buffer.

.SH Parameters

   \fI(none)\fP

.SH Return value

   Pointer to the beginning of the buffer in the associated std::strsteambuf or NULL if
   no buffer is available.

.SH Example

   
// Run this code

 #include <strstream>
 #include <iostream>

 int main()
 {
     std::ostrstream dyn; // dynamically-allocated output buffer
     dyn << "Test: " << 1.23;
     std::cout << "The output stream holds \\"" << dyn.str() << "\\"\\n";

     dyn << "Test: " << 1.23;
     std::cout << "The output stream holds \\"" << dyn.str() << "\\"\\n";
     // the stream is now frozen due to str()
     dyn << " More text";
     std::cout << "The output stream holds \\"" << dyn.str() << "\\"\\n";
     dyn.freeze(false);
 }

.SH Possible output:

 The stream holds "Test: 1.23"
 The stream holds "Test: 1.23 More "

.SH See also

   str marks the buffer frozen and returns the beginning pointer of the input sequence
       \fI(public member function of std::strstreambuf)\fP
