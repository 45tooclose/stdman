.TH std::negate 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <functional>
   template< class T >             \fI(until C++14)\fP
   struct negate;
   template< class T = void >      \fI(since C++14)\fP
   struct negate;

   Function object for performing negation. Effectively calls operator- on an instance
   of type T.

.SH Contents

     * 1 Specializations
     * 2 Member types
     * 3 Member functions
     * 4
       std::negate::operator()

          * 4.1 Parameters
          * 4.2 Return value
          * 4.3 Exceptions
          * 4.4 Possible implementation

.SH Specializations

   The standard library provides a specialization of std::negate when T
   is not specified, which leaves the parameter types and return type to
   be deduced.
                                                                          \fI(since C++14)\fP
                function object implementing -x deducing argument and
   negate<void> return types
                \fI(class template specialization)\fP

.SH Member types

   Type          Definition
   result_type   T
   argument_type T

.SH Member functions

   operator() returns the negation of the argument
              \fI(public member function)\fP

                                 std::negate::operator()

   T operator()( const T& arg ) const;            \fI(until C++14)\fP
   constexpr T operator()( const T& arg ) const;  \fI(since C++14)\fP

   Returns the negation of arg.

.SH Parameters

   arg - value to compute negation of

.SH Return value

   The result of -arg.

.SH Exceptions

   \fI(none)\fP

.SH Possible implementation

   constexpr T operator()(const T &arg) const
   {
       return -arg;
   }
