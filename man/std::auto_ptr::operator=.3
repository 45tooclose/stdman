.TH std::auto_ptr::operator= 3 "Nov 25 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::auto_ptr::operator= \- std::auto_ptr::operator=

.SH Synopsis
   auto_ptr& operator=( auto_ptr& r );    \fB(1)\fP \fB(deprecated)\fP
   template< class Y >                    \fB(2)\fP \fB(deprecated)\fP
   auto_ptr& operator=( auto_ptr<Y>& r );
   auto_ptr& operator=( auto_ptr_ref m ); \fB(3)\fP \fB(deprecated)\fP

   Replaces the managed object with the one managed by r.

   1) Effectively calls reset(r.release()).
   2) Effectively calls reset(r.release()). Y* must be implicitly convertible to T*.
   3) Effectively calls reset(m.release()). auto_ptr_ref is an implementation-defined
   type that holds a reference to auto_ptr. The implementation is allowed to provide
   the template with a different name or implement equivalent functionality in other
   ways.

.SH Parameters

   r - another auto_ptr to transfer the ownership of the object from
   m - an implementation-defined type that holds a reference to auto_ptr

.SH Return value

   *this.

.SH Exceptions

   \fI(none)\fP
