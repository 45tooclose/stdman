.TH std::bad_array_length 3 "Nov 25 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bad_array_length \- std::bad_array_length

.SH Synopsis
   Defined in header <new>
   class bad_array_length : public std::bad_alloc;  \fI(since C++14)\fP

   std::bad_array_length is the type of the object thrown as exceptions by the
   constructors of arrays of runtime bound and objects of type std::dynarray to report
   invalid array lengths if

   1) array length is negative or equal to zero (for arrays of runtime bound)
   2) total size of the new array would exceed implementation-defined maximum value
   (for both arrays of runtime bound and std::dynarray)

    This section is incomplete
    Reason: inheritance diagram

.SH Member functions

   constructor   constructs the bad_array_length object
                 \fI(public member function)\fP

                         std::bad_array_length::bad_array_length

   bad_array_length();  \fI(since C++14)\fP

   Constructs new exception object.

.SH Parameters

   \fI(none)\fP

.SH Exceptions

   noexcept specification:  
   noexcept
     

Inherited from std::bad_alloc

Inherited from std::exception

.SH Member functions

   destructor   destructs the exception object
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP 
   what         returns an explanatory string
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP 

.SH Notes

   The override for the virtual member function what() may by provided, but is not
   required.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   bad_array_new_length exception thrown on allocation of array with invalid length
   \fI(C++11)\fP              \fI(class)\fP 

   Categories:

     * Todo with reason
     * Todo no example
