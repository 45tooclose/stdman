.TH std::fgets 3 "Nov 25 2015" "2.1 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::fgets \- std::fgets

.SH Synopsis
   Defined in header <cstdio>
   char* fgets( char* str, int count, std::FILE* stream );

   Reads at most count - 1 characters from the given file stream and stores them in
   str. The produced character string is always null-terminated. Parsing stops if
   end-of-file occurs or a newline character is found, in which case str will contain
   that newline character.

.SH Parameters

   str    - string to read the characters to
   count  - the length of str
   stream - file stream to read the data from

.SH Return value

   str on success, NULL on failure.

   If the failure has been caused by end of file condition, additionally sets the eof
   indicator (see std::feof()) on stdin. If the failure has been caused by some other
   error, sets the error indicator (see std::ferror()) on stdin.

.SH Example

   
// Run this code

 #include <iostream>
 #include <cstdio>
 #include <cstdlib>
  
 int main()
 {
     std::FILE* tmpf = std::tmpfile();
     std::fputs("Alan Turing\\n", tmpf);
     std::fputs("John von Neumann\\n", tmpf);
     std::fputs("Alonzo Church\\n", tmpf);
  
     std::rewind(tmpf);
     char buf[8];
     while (std::fgets(buf, sizeof buf, tmpf) != NULL) {
         std::cout << '"' << buf << '"' << '\\n';
     }
 }

.SH Output:

 "Alan Tu"
 "ring
 "
 "John vo"
 "n Neuma"
 "nn
 "
 "Alonzo "
 "Church
 "

.SH See also

   scanf         reads formatted input from stdin, a file stream or a buffer
   fscanf        \fI(function)\fP 
   sscanf
   gets          reads a character string from stdin
   \fI(until C++14)\fP \fI(function)\fP 
   fputs         writes a character string to a file stream
                 \fI(function)\fP 
   C documentation for
   fgets
