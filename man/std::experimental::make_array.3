.TH std::experimental::make_array 3 "Nov 25 2015" "2.1 | http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::make_array \- std::experimental::make_array

.SH Synopsis
   Defined in header <experimental/array>
   template <class D = void, class... Types>
   constexpr std::array<VT /* see below */,                (library fundamentals TS v2)
   sizeof...(Types)> make_array(Types&&... t);

   Creates a std::array whose size is equal to the number of arguments and whose
   elements are initialized from the corresponding arguments. Returns std::array<VT,
   sizeof...(Types)>{std::forward<Types>(t)...}

   If D is void, then the deduced type VT is std::common_type_t<Types...>. Otherwise,
   it is D.

   If D is void and any of std::decay_t<Types>... is a specialization of
   std::reference_wrapper, the program is ill-formed.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   to_array Creates a std::array object from a built-in array
            \fI(function template)\fP 

.SH Category:

     * Todo no example
