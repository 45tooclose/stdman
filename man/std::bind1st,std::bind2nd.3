.TH std::bind1st,std::bind2nd 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   template< class F, class T >                         \fB(1)\fP \fB(deprecated)\fP
   std::binder1st<F> bind1st( const F& f, const T& x );
   template< class F, class T >                         \fB(2)\fP \fB(deprecated)\fP
   std::binder2nd<F> bind2nd( const F& f, const T& x );

   Binds a given argument x to a first or second parameter of the given binary function
   object f. That is, stores x within the resulting wrapper, which, if called, passes x
   as the first or the second parameter of f.

   1) Binds the first argument of f to x. Effectively calls std::binder1st<F>(f,
   typename F::first_argument_type(x)).

   2) Binds the second argument of f to x. Effectively calls std::binder2nd<F>(f,
   typename F::second_argument_type(x)).

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Exceptions
     * 4 See also

.SH Parameters

   f - pointer to a function to bind an argument to
   x - argument to bind to f

.SH Return value

   A function object wrapping f and x.

.SH Exceptions

   \fI(none)\fP

.SH See also

   binder1st
   binder2nd    function object holding a binary function and one of its arguments
   \fB(deprecated)\fP \fI(class template)\fP
   \fB(deprecated)\fP
