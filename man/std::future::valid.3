.TH std::future::valid 3 "Sep  4 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   bool valid() const;  \fI(since C++11)\fP

   Checks if the future refers to a shared state. This is the case only for futures
   returned by std::promise::get_future(), std::packaged_task::get_future() or
   std::async() until the first time get()or share() is called.

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if *this refers to a shared state, otherwise false.

.SH Exceptions

   noexcept specification:
   noexcept

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   wait waits for the result to become available
        \fI(public member function)\fP

   Categories:

     * unconditionally noexcept
     * Todo no example
