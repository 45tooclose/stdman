.TH std::experimental::filesystem::status_known 3 "Sep  4 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   Defined in header <experimental/filesystem>
   bool status_known( file_status s );         \fB(1)\fP (filesystem TS)

   Checks if the given file status is known, Equivalent to s.type() == file_type::none.

.SH Parameters

   s - file status to check

.SH Return value

   true if the given file status is an unknown file status

.SH Exceptions

   noexcept specification:
   noexcept

.SH Notes

   Despite the name, the function checks for the file status of file_type::none
   (meaning an error occurred), not file_type::unknown (meaning file exists, but its
   type cannot be determined).

.SH See also

   status         determines file attributes
   symlink_status determines file attributes, checking the symlink target
                  \fI(function)\fP
                  cached status of the file designated by this directory entry
   status         cached symlink_status of the file designated by this directory entry
   symlink_status \fI\fI(public member\fP function of\fP
                  std::experimental::filesystem::directory_entry)

.SH Category:

     * unconditionally noexcept
