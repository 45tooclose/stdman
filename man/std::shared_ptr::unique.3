.TH std::shared_ptr::unique 3 "Sep  4 2015" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   bool unique() const;

   Checks if *this is the only shared_ptr instance managing the current object, i.e.
   whether use_count() == 1.

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if *this is the only shared_ptr instance managing the current object, false
   otherwise.

.SH Exceptions

   noexcept specification:
   noexcept

.SH Example

   
// Run this code

 #include <memory>
 #include <iostream>

 int main()
 {
     auto sp1 = std::make_shared<int>(5);
     std::cout << std::boolalpha;
     std::cout << "sp1.unique() == " << sp1.unique() << '\\n';

     std::shared_ptr<int> sp2 = sp1;
     std::cout << "sp1.unique() == " << sp1.unique() << '\\n';
 }

.SH Output:

 sp1.unique() == true
 sp1.unique() == false

.SH See also

             returns the number of shared_ptr objects referring to the same managed
   use_count object
             \fI(public member function)\fP

.SH Category:

     * unconditionally noexcept
