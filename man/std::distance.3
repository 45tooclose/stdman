.TH std::distance 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <iterator>
   template< class InputIt >

   typename std::iterator_traits<InputIt>::difference_type

   distance( InputIt first, InputIt last );

   Returns the number of elements between first and last.

   The behavior is undefined if last is not reachable from first by (possibly
   repeatedly) incrementing first.

.SH Contents

     * 1 Parameters
     * 2 Return value
     * 3 Complexity
     * 4 Example
     * 5 See also

.SH Parameters

   first               -              iterator pointing to the first element
   last                -              iterator pointing to the last element
.SH Type requirements
   -
   InputIt must meet the requirements of InputIterator. The operation is more efficient
   if InputIt additionally meets the requirements of RandomAccessIterator

.SH Return value

   The number of elements between first and last.

.SH Complexity

   Linear.

   However, if InputIt additionally meets the requirements of RandomAccessIterator,
   complexity is constant.

.SH Example

   
// Run this code

 #include <iostream>
 #include <iterator>
 #include <vector>

 int main()
 {
     std::vector<int> v{ 3, 1, 4 };

     auto distance = std::distance(v.begin(), v.end());

     std::cout << distance << '\\n';
 }

.SH Output:

 3

.SH See also

   advance advances an iterator by given distance
           \fI(function)\fP
