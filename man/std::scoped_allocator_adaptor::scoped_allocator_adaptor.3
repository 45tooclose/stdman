.TH std::scoped_allocator_adaptor::scoped_allocator_adaptor 3 "Jun 28 2014" "2.0 | http://cppreference.com" "C++ Standard Libary"
.SH Synopsis
   Defined in header <scoped_allocator>
   scoped_allocator_adaptor()                                         \fB(1)\fP \fI(since C++11)\fP
   template< class OuterA2 >
   scoped_allocator_adaptor( OuterA2&& outerAlloc, const              \fB(2)\fP \fI(since C++11)\fP
   InnerAllocs&... innerAllocs)
   scoped_allocator_adaptor( const scoped_allocator_adaptor& other )  \fB(3)\fP \fI(since C++11)\fP
   scoped_allocator_adaptor( scoped_allocator_adaptor&& other )       \fB(4)\fP \fI(since C++11)\fP
   template< class OuterA2 >
   scoped_allocator_adaptor( const scoped_allocator_adaptor<OuterA2,  \fB(5)\fP \fI(since C++11)\fP
   InnerAllocs...>& other )
   template< class OuterA2 >
   scoped_allocator_adaptor( scoped_allocator_adaptor<OuterA2,        \fB(6)\fP \fI(since C++11)\fP
   InnerAllocs...>&& other )

   1) Default constructor: value-initializes the OuterAlloc base class and the inner
   allocator member object, if used by the implementation.

   2) Constructs the base class OuterAlloc from std::forward<OuterA2>(outerAlloc), and
   the inner allocators with innerAllocs....

   3) Copy-constructor: initializes each allocator from the corresponding allocator of
   other

   4) Move-constructor: moves each allocator from the corresponding allocator of other
   into *this

   5) Initializes each allocator from the corresponding allocator of other

   6) Initializes each allocator from the corresponding allocator of other, using move
   semantics.

.SH Parameters

   outerAlloc     - constructor argument for the outer allocator
   innerAllocs... - constructor arguments for the inner allocators
   other          - another std::scoped_allocator_adaptor

.SH Exceptions

   2-6)
   noexcept specification:  
   noexcept
     

.SH See also

   allocate  allocates uninitialized storage using the outer allocator
             \fI(public member function)\fP 
             constructs an object in allocated storage, passing the inner allocator to
   construct its constructor if appropriate
             \fI(public member function)\fP 
