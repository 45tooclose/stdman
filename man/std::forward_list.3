.TH std::forward_list 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   Defined in header <forward_list>
   template<

       class T,                             \fI(since C++11)\fP
       class Allocator = std::allocator<T>

   > class forward_list;

   std::forward_list is a container that supports fast insertion and removal of
   elements from anywhere in the container. Fast random access is not supported. It is
   implemented as a singly-linked list and essentially does not have any overhead
   compared to its implementation in C. Compared to std::list this container provides
   more space efficient storage when bidirectional iteration is not needed.

   Addition, removal and moving the elements within the list or across several lists
   does not invalidate the iterators. An iterator is invalidated only when the
   corresponding element is deleted.

   std::forward_list meets the requirements of Container (except for the size() member
   function), AllocatorAwareContainer and SequenceContainer.

.SH Contents

     • 1 Template parameters
     • 2 Member types
     • 3 Member functions

          • 3.1 Element access
          • 3.2 Iterators
          • 3.3 Capacity
          • 3.4 Modifiers
          • 3.5 Operations

     • 4 Non-member functions

.SH Template parameters

               The type of the elements.

   T         - The requirements that are imposed on the elements depend on the actual
               operations performed on the container. Generally, it is required that
               element type meets the requirements of MoveConstructible and
               MoveAssignable, but many member functions impose stricter requirements.
   Allocator - An allocator that is used to acquire memory to store the elements. The
               type must meet the requirements of Allocator.

.SH Member types

   Member type     Definition
   value_type      T
   allocator_type  Allocator
   size_type       Unsigned integral type (usually std::size_t)
   difference_type Signed integer type (usually std::ptrdiff_t)
   reference       value_type&
   const_reference const value_type&
   pointer         std::allocator_traits<Allocator>::pointer
   const_pointer   std::allocator_traits<Allocator>::const_pointer
   iterator        ForwardIterator
   const_iterator  Constant forward iterator

.SH Member functions

   constructor   constructs the forward_list
                 \fI(public member function)\fP
   destructor    destructs the forward_list
                 \fI(public member function)\fP
   operator=     assigns values to the container
                 \fI(public member function)\fP
   assign        assigns values to the container
                 \fI(public member function)\fP
   get_allocator returns the associated allocator
                 \fI(public member function)\fP
.SH Element access
   front         access the first element
                 \fI(public member function)\fP
.SH Iterators
   before_begin  returns an iterator to the element before beginning
   cbefore_begin \fI(public member function)\fP
   begin         returns an iterator to the beginning
   cbegin        \fI(public member function)\fP
   end           returns an iterator to the end
   cend          \fI(public member function)\fP
.SH Capacity
   empty         checks whether the container is empty
                 \fI(public member function)\fP
   max_size      returns the maximum possible number of elements
                 \fI(public member function)\fP
.SH Modifiers
   clear         clears the contents
                 \fI(public member function)\fP
   insert_after  inserts elements after an element
                 \fI(public member function)\fP
   emplace_after constructs elements in-place after an element
                 \fI(public member function)\fP
   erase_after   erases an element after an element
                 \fI(public member function)\fP
   push_front    inserts elements to the beginning
                 \fI(public member function)\fP
   emplace_front constructs elements in-place at the beginning
                 \fI(public member function)\fP
   pop_front     removes the first element
                 \fI(public member function)\fP
   resize        changes the number of elements stored
                 \fI(public member function)\fP
   swap          swaps the contents
                 \fI(public member function)\fP
.SH Operations
   merge         merges two sorted lists
                 \fI(public member function)\fP
   splice_after  moves elements from another forward_list
                 \fI(public member function)\fP
   remove        removes elements satisfying specific criteria
   remove_if     \fI(public member function)\fP
   reverse       reverses the order of the elements
                 \fI(public member function)\fP
   unique        removes consecutive duplicate elements
                 \fI(public member function)\fP
   sort          sorts the elements
                 \fI(public member function)\fP

.SH Non-member functions

   operator==
   operator!=                   lexicographically compares the values in the
   operator<                    forward_list
   operator<=                   \fI(function template)\fP
   operator>
   operator>=
   std::swap(std::forward_list) specializes the std::swap algorithm
                                \fI(function template)\fP
