.TH std::end(std::initializer_list) 3 "Apr 19 2014" "1.0.0" "C++ Standard Libary"
.SH Synopsis
   template< class E >                                \fI(since C++11)\fP
   const E* end( initializer_list<E> il );
   template< class E >                                \fI(since C++11)\fP
   constexpr const E* end( initializer_list<E> il );  \fI(until C++14)\fP

   The specialization of std::end for initializer_list returns a pointer to one past
   the last element of il.

.SH Contents

     • 1 Parameters
     • 2 Return value
     • 3 Exceptions
     • 4 Example
     • 5 See also

.SH Parameters

   il - an initializer_list

.SH Return value

   il.end()

.SH Exceptions

   noexcept specification:  
   noexcept
     

.SH Example

   
// Run this code

 #include <iostream>
  
 int main()
 {
     // range-based for uses std::begin and std::end to iterate
     // over a given range; in this case, it's an initializer list
     for (int i : {3, 1, 4, 1}) {
         std::cout << i << '\\n';
     }
 }

.SH Output:

 3
 1
 4
 1

.SH See also

   end returns a pointer to one past the last element
       \fI(public member function)\fP
